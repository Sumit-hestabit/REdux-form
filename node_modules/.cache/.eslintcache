[{"/var/www/redux-form/redux-form/src/index.js":"1","/var/www/redux-form/redux-form/src/reportWebVitals.js":"2","/var/www/redux-form/redux-form/src/SimpleForm.js":"3","/var/www/redux-form/redux-form/src/showResults.js":"4","/var/www/redux-form/redux-form/src/store.js":"5","/var/www/redux-form/redux-form/src/TextInput.js":"6","/var/www/redux-form/redux-form/src/App.js":"7","/var/www/redux-form/redux-form/src/utils/topping.js":"8"},{"size":596,"mtime":1637376838733,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1637118430248,"results":"11","hashOfConfig":"12"},{"size":4346,"mtime":1637380857605,"results":"13","hashOfConfig":"10"},{"size":246,"mtime":1637122309821,"results":"14","hashOfConfig":"10"},{"size":335,"mtime":1637121154715,"results":"15","hashOfConfig":"10"},{"size":1971,"mtime":1637224581604,"results":"16","hashOfConfig":"12"},{"size":2061,"mtime":1637312514620,"results":"17","hashOfConfig":"10"},{"size":154,"mtime":1637379837232,"results":"18","hashOfConfig":"10"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},"1xxhzjr",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fs9rmm",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/var/www/redux-form/redux-form/src/index.js",["39"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n// import { Values } from \"redux-form-website-template\";\nimport store from \"./store\";\nimport showResults from \"./showResults\";\nimport SimpleForm from \"./SimpleForm\";\nimport \"./App.css\"; \nimport App from \"./App\";\nconst rootEl = document.getElementById(\"root\");\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <div style={{ padding: 15 }}>\n      <h1>Registration Form</h1>\n      <SimpleForm onSubmit={showResults} />\n      {/* <Values form=\"simple\" /> */}\n    </div>\n  </Provider>,\n  rootEl\n);\n\n",["40","41"],"/var/www/redux-form/redux-form/src/reportWebVitals.js",[],"/var/www/redux-form/redux-form/src/SimpleForm.js",["42","43"],"import React, { useEffect, useState } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport axios from 'axios';\nimport { toppings } from './utils/topping';\n\n// Form validation part :\n\nconst validate = values => {\n  const errors = {}\n  if (!values.firstName) {\n    errors.firstName = 'Required First Name'\n  } else if (values.firstName.length > 15) {\n    errors.firstName = 'Must be 15 characters or less'\n  }\n  if (!values.lastName) {\n    errors.lastName = 'Required Last Name'\n  } else if (values.lastName.length > 15) {\n    errors.lastName = 'Must be 15 characters or less'\n  }\n  if (!values.email) {\n    errors.email = 'Required Email'\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address'\n  }\n  if (!values.password) {\n    errors.password = 'Required password';\n  }\n  if (!values.gender){\n    errors.gender = 'Required to Choose any one';\n}\n  return errors\n}\n\n\n// Component validation defined of Redux-form\n\nconst TextInput = ({ input, label,type, meta: { touched, error, warning }}) =>\n  <div><label>{label}</label>\n  <div>\n  <input {...input} placeholder={label} type={type} />\n  {touched &&((error && <span className=\"error\">{error} </span>) || (warning &&\n  <span className=\"warning\">{warning}</span>))}\n  </div>\n  </div>\n\n// Redux Form submitting \n\nconst Submit = async (values) => {\n    let data = {\n        user: {\n            firstName: values.firstName,\n            lastName: values.lastName,\n            email: values.email,\n            password: values.password,\n            gender: values.gender,\n            name: values.name,\n        },\n    }\n  console.log(\"data->>>>>\",data);\n  axios\n      .post(`https://jsonplaceholder.typicode.com/users`, { data })\n      .then(res => {\n      console.log(\"response->>>>>>>\",res);\n      console.log(\"response-data->>>>>>>\",res.data);\n    });\n}\n\n\n  const SimpleForm = props => {\n\n  const { handleSubmit, pristine, reset, submitting } = props\n\n  // Return part of Jsx Element : \n\nreturn (\n    <form onSubmit={handleSubmit((values) => Submit(values))}>\n    \n    <div className=\"row\">\n         <Field\n            name=\"firstName\"\n            type=\"text\"\n            component={TextInput}\n            label=\"First Name\"\n         />\n      </div>\n\n      <div className=\"row\">\n            <Field\n              name=\"lastName\"\n              type=\"text\"\n              component={TextInput}\n              label=\"Last Name\"\n          />\n      </div>\n\n      <div className=\"row\">\n      <Field\n             name=\"email\"\n             type=\"email\" \n             component={TextInput} \n             label=\"Email\"\n         />\n      </div>\n\n      <div className=\"row\">\n      <Field \n             name=\"password\"\n             type=\"password\" \n             component={TextInput} \n             label=\"Password\"\n       />\n      </div>\n\n\n    <div className=\"row\">\n      <label>Gender</label>\n    <label>\n    <Field \n           name=\"gender\"\n           component=\"input\"\n           type=\"radio\" \n           value=\"male\"\n     /> Male\n    </label>\n    <label>\n    <Field name=\"gender\"\n            component=\"input\" \n            type=\"radio\"\n             value=\"female\"\n     /> Female</label>\n    </div>\n\n    <div className=\"row\">\n    <label>Favorite Color</label>\n    <Field\n        name=\"favoriteColor\"\n        component=\"select\">\n        <option value=\"color\">Select Favorite Color</option>\n        <option value=\"ff0000\">Red</option>\n        <option value=\"00ff00\">Green</option>\n        <option value=\"0000ff\">Blue</option>\n    </Field>\n    </div>\n    <div className=\"row\">\n    <ul className=\"toppings-list\">\n        {toppings.map(({ name }, index) => {\n          return (\n        <li key={index}>\n              <input\n                type=\"checkbox\"\n                id={`custom-checkbox-${index}`}\n                name={name}\n                value={name}\n                component={TextInput}\n              />\n              <label htmlFor={`custom-checkbox-${index}`}>{name}</label>\n        </li>\n          );\n        })}\n      </ul>\n      </div>\n\n    <button type=\"submit\" disabled={submitting}>Submit</button>\n    <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values </button>\n    </form>\n  )\n}\n\nexport default reduxForm({\n      form: 'simple', \n      validate, // form validation \n})(SimpleForm)\n","/var/www/redux-form/redux-form/src/showResults.js",[],"/var/www/redux-form/redux-form/src/store.js",[],"/var/www/redux-form/redux-form/src/TextInput.js",[],"/var/www/redux-form/redux-form/src/App.js",["44","45","46"],"import React , {useState} from 'react';\nimport { Field,reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\n\nfunction App(props) {\n    const [username, setUserName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n\n    const {handleSubmit,Submitting} = props;\n\n    return(\n        <div className=\"App\">\n            <center><h1>Registration Form</h1></center>\n            <form onSubmit={handleSubmit}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <Field type=\"text\" name=\"username\" value={username} component=\"input\" label=\"Enter UserName\" onChange={(e)=>setUserName(e.target.value)}/>\n                        </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <Field type=\"text\" name=\"email\" value={email} component=\"input\" label=\"Enter Email\" onChange={(e)=>setEmail(e.target.value)}/>\n                        </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <Field type=\"number\" name=\"phone\" value={phone} component=\"input\" label=\"Enter Phone Number\" onChange={(e)=>setPhone(e.target.value)}/>\n                        </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <Field type=\"text\" name=\"address\" value={address} component=\"input\" label=\"Enter Address\" setAddress={(e)=>setAddress(e.target.value)}/>\n                        </div>\n                </div>\n                <button type=\"button\" disabled ={Submitting}>Submit</button>\n            </form>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        submmit:(username,email,phone,address) => { \n            dispatch({type:'SUBMIT',\n            payload:{firstName:username,\n             }}) }\n    }\n}\nexport default App;","/var/www/redux-form/redux-form/src/utils/topping.js",[],{"ruleId":"47","severity":1,"message":"48","line":9,"column":8,"nodeType":"49","messageId":"50","endLine":9,"endColumn":11},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"47","severity":1,"message":"55","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":26},{"ruleId":"47","severity":1,"message":"56","line":1,"column":28,"nodeType":"49","messageId":"50","endLine":1,"endColumn":36},{"ruleId":"47","severity":1,"message":"57","line":2,"column":16,"nodeType":"49","messageId":"50","endLine":2,"endColumn":25},{"ruleId":"47","severity":1,"message":"58","line":3,"column":10,"nodeType":"49","messageId":"50","endLine":3,"endColumn":17},{"ruleId":"47","severity":1,"message":"59","line":46,"column":7,"nodeType":"49","messageId":"50","endLine":46,"endColumn":25},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["60"],"no-negated-in-lhs",["61"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'reduxForm' is defined but never used.","'connect' is defined but never used.","'mapDispatchToProps' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]