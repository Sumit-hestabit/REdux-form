{"ast":null,"code":"var _jsxFileName = \"/var/www/redux-form/redux-form/src/SimpleForm.js\";\n// import React, { useEffect, useState } from 'react';\n// import { Field, reduxForm } from 'redux-form';\n// import axios from 'axios';\n// // import { toppings } from './utils/topping';\n// // Form validation part :\n// const validate = values => {\n//   const errors = {}\n//   if (!values.firstName) {\n//     errors.firstName = 'Required First Name'\n//   } else if (values.firstName.length > 15) {\n//     errors.firstName = 'Must be 15 characters or less'\n//   }\n//   if (!values.lastName) {\n//     errors.lastName = 'Required Last Name'\n//   } else if (values.lastName.length > 15) {\n//     errors.lastName = 'Must be 15 characters or less'\n//   }\n//   if (!values.email) {\n//     errors.email = 'Required Email'\n//   } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n//     errors.email = 'Invalid email address'\n//   }\n//   if (!values.password) {\n//     errors.password = 'Required password';\n//   }\n//   if (!values.gender){\n//     errors.gender = 'Required to Choose any one';\n// }\n//   return errors\n// }\n// const userData = [\n//   {name:\"jeevan\"},\n//   {name:\"Manish\"},\n//   {name:\"Price\"},\n//   {name:\"saurabh\"}\n// ];\n// // Component validation defined of Redux-form\n// const TextInput = ({ input, label,type, meta: { touched, error, warning }}) =>\n//   <div><label>{label}</label>\n//   <div>\n//   <input {...input} placeholder={label} type={type} />\n//   {touched &&((error && <span className=\"error\">{error} </span>) || (warning &&\n//   <span className=\"warning\">{warning}</span>))}\n//   </div>\n//   </div>\n// // Redux Form submitting \n// const Submit = async (values) => {\n//     let data = {\n//         user: {\n//             firstName: values.firstName,\n//             lastName: values.lastName,\n//             email: values.email,\n//             password: values.password,\n//             gender: values.gender,\n//             name: values.name,\n//         },\n//     }\n//   console.log(\"data->>>>>\",data);\n//   axios\n//       .post(`https://jsonplaceholder.typicode.com/users`, { data })\n//       .then(res => {\n//       console.log(\"response->>>>>>>\",res);\n//       console.log(\"response-data->>>>>>>\",res.data);\n//     });\n// }\n//   const SimpleForm = props => {\n//   const { handleSubmit, pristine, reset, submitting } = props\n//   const [users,setUser] = useState([]);\n//   useEffect(()=>{\n//     setUser(userData);\n//     console.log(userData);\n//   },[]);\n//   // Return part of Jsx Element : \n// return (\n//     <form onSubmit={handleSubmit((values) => Submit(values))}>\n//     <div className=\"col-md-6\">\n//     <div className=\"row\">\n//          <Field\n//             name=\"firstName\"\n//             type=\"text\"\n//             component={TextInput}\n//             label=\"First Name\"\n//          />\n//       </div>\n//       </div>\n//       <div className=\"col-md-6\">\n//       <div className=\"row\">\n//             <Field\n//               name=\"lastName\"\n//               type=\"text\"\n//               component={TextInput}\n//               label=\"Last Name\"\n//           />\n//       </div>\n//       </div>\n//       <div className=\"col-md-6\">\n//       <div className=\"row\">\n//       <Field\n//              name=\"email\"\n//              type=\"email\" \n//              component={TextInput} \n//              label=\"Email\"\n//          />\n//       </div>\n//       <div className=\"row\">\n//       <Field \n//              name=\"password\"\n//              type=\"password\" \n//              component={TextInput} \n//              label=\"Password\"\n//        />\n//       </div>\n//      </div>\n//      <div className=\"col-md-6\">\n//     <div className=\"row\">\n//       <label>Gender</label>\n//     <label>\n//     <Field \n//            name=\"gender\"\n//            component=\"input\"\n//            type=\"radio\" \n//            value=\"male\"\n//      /> Male\n//     </label>\n//     <label>\n//     <Field name=\"gender\"\n//             component=\"input\" \n//             type=\"radio\"\n//              value=\"female\"\n//      /> Female</label>\n//     </div>\n//     </div>\n//     <div className=\"col-md-6\">\n//     <div className=\"row\">\n//     <label>Favorite Color</label>\n//     <Field\n//         name=\"favoriteColor\"\n//         component=\"select\">\n//         <option value=\"color\">Select Favorite Color</option>\n//         <option value=\"ff0000\">Red</option>\n//         <option value=\"00ff00\">Green</option>\n//         <option value=\"0000ff\">Blue</option>\n//     </Field>\n//     </div>\n//     </div>\n//     <div className=\"col-md-6\">\n//     <div className=\"row\">\n//     <ul className=\"toppings-list\">\n//         {users.map(({name} , index) => {\n//           return (\n//         <li key={index}>\n//               <Field\n//                 type=\"checkbox\"\n//                 id={`custom-checkbox-${index}`}\n//                 name={name}\n//                 value={name}\n//                 component={TextInput}\n//               />\n//               <label htmlFor={`custom-checkbox-${index}`}>{name}</label>\n//         </li>\n//           );\n//         })}\n//       </ul>\n//       </div>\n//       </div>\n//     <button type=\"submit\" disabled={submitting}>Submit</button>\n//     <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values </button>\n//     </form>\n//   )\n// }\n// export default reduxForm({\n//       form: 'simple', \n//       validate, // form validation \n// })(SimpleForm)\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SimpleForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      person: {\n        name: \"\",\n        age: \"\",\n        country: \"\",\n        gender: \"\",\n        passport: \"\",\n        license: \"\",\n        city: \"\",\n        passport_number: \"\",\n        techsKnown: []\n      },\n      countries: [\"united states of america\", \"India\", 'Australia', \"Pakistan\", \"United KIngdom\"],\n      countryList: [{\n        country: \"united states of america\",\n        cities: [\"New york\", \"Los Angles\", \"Seattle\", \"San Francisco\"]\n      }, {\n        country: \"India\",\n        cities: [\"Delhi\", \"Kolkata\", \"Banglore\", \"Mumbai\", \"bihar\"]\n      }, {\n        country: \"Australia\",\n        cities: [\"Melbourne\", \"sydney\", \"Gaba\"]\n      }, {\n        country: \"Pakistan\",\n        cities: [\"Islamabad\", \"sharjha\", \"lahore\", \"MUltan\"]\n      }, {\n        country: \"United KIngdom\",\n        cities: [\"Lords\", \"oval\"]\n      }],\n      techs: [\"React\", \"Javascript\", \"Jquery\", \"Angular\", \"vue\"]\n    };\n\n    this.handleChange = e => {\n      const {\n        currentTarget: input\n      } = e;\n      let s1 = { ...this.state\n      };\n      input.type === \"checkbox\" ? input.name === \"techsKnown\" ? this.updatePart(input.checked, input.value, s1.person.techsKnown) : s1.person[input.name] = input.checked : s1.person[input.name] = input.value;\n      if (input.name === \"country\") s1.person.city = \"\";\n      if (!s1.person.passport) s1.person.passport_number = \"\";\n      this.setState(s1);\n      console.log(\"data->>>>>\", s1);\n    };\n\n    this.updatePart = (checked, value, arr) => {\n      if (checked) arr.push(value);else {\n        let index = arr.findIndex(ele => ele === value);\n        if (index >= 0) arr.splice(index, 1);\n      }\n      return arr;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    let {\n      name,\n      age,\n      country,\n      gender,\n      passport,\n      license,\n      city,\n      passport_number,\n      techsKnown\n    } = this.state.person;\n    const {\n      countries,\n      countryList,\n      techs\n    } = this.state;\n    const cities = country ? countryList.find(c1 => c1.country === country).cities : [];\n    console.log(cities);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Complete your Registration Process \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"Enter your Name\",\n          value: name,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"age\",\n          name: \"age\",\n          placeholder: \"Enter your Name\",\n          value: age,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          name: \"country\",\n          value: country,\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            disabled: true,\n            value: \"\",\n            children: \"Select Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 11\n          }, this), countries.map(data => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 7\n      }, this), country ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          className: \"form-control\",\n          name: \"city\",\n          value: city,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"\",\n          children: \"Select city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), cities.map(data => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 7\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check  form-check-inline\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          className: \"form-check-input\",\n          type: \"radio\",\n          name: \"gender\",\n          value: \"Male\",\n          checked: gender === \"Male\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          children: \"Male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check  form-check-inline\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          className: \"form-check-input\",\n          type: \"radio\",\n          name: \"gender\",\n          value: \"Female\",\n          checked: gender === \"Female\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          children: \"Female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          value: passport,\n          name: \"passport\",\n          checked: passport,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          children: \"Passport\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          value: license,\n          name: \"license\",\n          checked: license,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          children: \"License\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 4\n      }, this), passport ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter your Passport Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"passportNumber\",\n          name: \"passport_number\",\n          placeholder: \"Passport Number\",\n          value: passport_number,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this) : \"\", techs.map(t1 => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          value: t1,\n          name: \"techsKnown\",\n          checked: techsKnown.findIndex(tech => tech === t1) >= 0,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          children: t1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this);\n  }\n\n} // Decorate the form component\n\n\nSimpleForm = reduxForm({\n  form: 'contact' // a unique name for this form\n\n})(SimpleForm);\nexport default SimpleForm;","map":{"version":3,"sources":["/var/www/redux-form/redux-form/src/SimpleForm.js"],"names":["React","Component","Field","reduxForm","SimpleForm","state","person","name","age","country","gender","passport","license","city","passport_number","techsKnown","countries","countryList","cities","techs","handleChange","e","currentTarget","input","s1","type","updatePart","checked","value","setState","console","log","arr","push","index","findIndex","ele","splice","handleSubmit","preventDefault","render","find","c1","map","data","t1","tech","form"],"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","sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { Field, reduxForm } from 'redux-form';\n// import axios from 'axios';\n// // import { toppings } from './utils/topping';\n\n// // Form validation part :\n\n// const validate = values => {\n//   const errors = {}\n//   if (!values.firstName) {\n//     errors.firstName = 'Required First Name'\n//   } else if (values.firstName.length > 15) {\n//     errors.firstName = 'Must be 15 characters or less'\n//   }\n//   if (!values.lastName) {\n//     errors.lastName = 'Required Last Name'\n//   } else if (values.lastName.length > 15) {\n//     errors.lastName = 'Must be 15 characters or less'\n//   }\n//   if (!values.email) {\n//     errors.email = 'Required Email'\n//   } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n//     errors.email = 'Invalid email address'\n//   }\n//   if (!values.password) {\n//     errors.password = 'Required password';\n//   }\n//   if (!values.gender){\n//     errors.gender = 'Required to Choose any one';\n// }\n//   return errors\n// }\n\n// const userData = [\n//   {name:\"jeevan\"},\n//   {name:\"Manish\"},\n//   {name:\"Price\"},\n//   {name:\"saurabh\"}\n// ];\n\n// // Component validation defined of Redux-form\n\n// const TextInput = ({ input, label,type, meta: { touched, error, warning }}) =>\n//   <div><label>{label}</label>\n//   <div>\n//   <input {...input} placeholder={label} type={type} />\n//   {touched &&((error && <span className=\"error\">{error} </span>) || (warning &&\n//   <span className=\"warning\">{warning}</span>))}\n//   </div>\n//   </div>\n\n// // Redux Form submitting \n\n// const Submit = async (values) => {\n//     let data = {\n//         user: {\n//             firstName: values.firstName,\n//             lastName: values.lastName,\n//             email: values.email,\n//             password: values.password,\n//             gender: values.gender,\n//             name: values.name,\n//         },\n//     }\n//   console.log(\"data->>>>>\",data);\n//   axios\n//       .post(`https://jsonplaceholder.typicode.com/users`, { data })\n//       .then(res => {\n//       console.log(\"response->>>>>>>\",res);\n//       console.log(\"response-data->>>>>>>\",res.data);\n//     });\n// }\n\n\n//   const SimpleForm = props => {\n\n//   const { handleSubmit, pristine, reset, submitting } = props\n\n//   const [users,setUser] = useState([]);\n\n//   useEffect(()=>{\n//     setUser(userData);\n//     console.log(userData);\n//   },[]);\n\n//   // Return part of Jsx Element : \n\n// return (\n//     <form onSubmit={handleSubmit((values) => Submit(values))}>\n    \n//     <div className=\"col-md-6\">\n//     <div className=\"row\">\n//          <Field\n//             name=\"firstName\"\n//             type=\"text\"\n//             component={TextInput}\n//             label=\"First Name\"\n//          />\n//       </div>\n//       </div>\n\n//       <div className=\"col-md-6\">\n//       <div className=\"row\">\n//             <Field\n//               name=\"lastName\"\n//               type=\"text\"\n//               component={TextInput}\n//               label=\"Last Name\"\n//           />\n//       </div>\n//       </div>\n\n//       <div className=\"col-md-6\">\n//       <div className=\"row\">\n//       <Field\n//              name=\"email\"\n//              type=\"email\" \n//              component={TextInput} \n//              label=\"Email\"\n//          />\n//       </div>\n\n//       <div className=\"row\">\n//       <Field \n//              name=\"password\"\n//              type=\"password\" \n//              component={TextInput} \n//              label=\"Password\"\n//        />\n//       </div>\n//      </div>\n\n\n//      <div className=\"col-md-6\">\n//     <div className=\"row\">\n//       <label>Gender</label>\n//     <label>\n//     <Field \n//            name=\"gender\"\n//            component=\"input\"\n//            type=\"radio\" \n//            value=\"male\"\n//      /> Male\n//     </label>\n//     <label>\n//     <Field name=\"gender\"\n//             component=\"input\" \n//             type=\"radio\"\n//              value=\"female\"\n//      /> Female</label>\n//     </div>\n//     </div>\n\n//     <div className=\"col-md-6\">\n//     <div className=\"row\">\n//     <label>Favorite Color</label>\n//     <Field\n//         name=\"favoriteColor\"\n//         component=\"select\">\n//         <option value=\"color\">Select Favorite Color</option>\n//         <option value=\"ff0000\">Red</option>\n//         <option value=\"00ff00\">Green</option>\n//         <option value=\"0000ff\">Blue</option>\n//     </Field>\n//     </div>\n//     </div>\n\n//     <div className=\"col-md-6\">\n//     <div className=\"row\">\n//     <ul className=\"toppings-list\">\n//         {users.map(({name} , index) => {\n//           return (\n//         <li key={index}>\n//               <Field\n//                 type=\"checkbox\"\n//                 id={`custom-checkbox-${index}`}\n//                 name={name}\n//                 value={name}\n//                 component={TextInput}\n//               />\n//               <label htmlFor={`custom-checkbox-${index}`}>{name}</label>\n//         </li>\n//           );\n//         })}\n//       </ul>\n//       </div>\n//       </div>\n\n//     <button type=\"submit\" disabled={submitting}>Submit</button>\n//     <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values </button>\n//     </form>\n//   )\n// }\n\n// export default reduxForm({\n//       form: 'simple', \n//       validate, // form validation \n// })(SimpleForm)\n\n\n\n\n\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass SimpleForm extends Component {\n  state = {\n    person:{\n        name:\"\",\n        age:\"\",\n        country:\"\",\n        gender:\"\",  \n        passport:\"\",\n        license:\"\",\n        city:\"\",\n        passport_number: \"\",\n        techsKnown:[],\n    },\n    countries:[\n        \"united states of america\",\n        \"India\",\n        'Australia',\n        \"Pakistan\",\n        \"United KIngdom\"\n    ],\n    countryList : [\n        {\n            country:\"united states of america\",\n            cities: [\"New york\",\"Los Angles\",\"Seattle\",\"San Francisco\"],\n        },\n        {\n            country:\"India\",\n            cities: [\"Delhi\",\"Kolkata\",\"Banglore\",\"Mumbai\",\"bihar\"],\n        },\n        {\n            country:\"Australia\",\n            cities: [\"Melbourne\",\"sydney\",\"Gaba\"],\n        },\n        {\n            country:\"Pakistan\",\n            cities: [\"Islamabad\",\"sharjha\",\"lahore\",\"MUltan\"],\n        },\n        {\n            country:\"United KIngdom\",\n            cities: [\"Lords\",\"oval\",],\n        },\n\n    ],\n    techs : [\"React\",\"Javascript\",\"Jquery\",\"Angular\",\"vue\"],\n\n};\nhandleChange = (e) =>{\n  const {currentTarget:input} = e;\n  let s1 = {...this.state};\n  input.type === \"checkbox\" \n  ? input.name === \"techsKnown\" ? this.updatePart(input.checked,input.value,s1.person.techsKnown)\n  : (s1.person[input.name] = input.checked) :\n    (s1.person[input.name] = input.value);\n  if(input.name === \"country\") s1.person.city = \"\";\n  if(!s1.person.passport) s1.person.passport_number = \"\";\n  this.setState(s1);\n  console.log(\"data->>>>>\",s1);\n}\n\nupdatePart = (checked,value,arr) => {\nif(checked) arr.push(value);\nelse{\n   let index = arr.findIndex(ele=>ele === value);\n   if(index>=0) arr.splice(index,1);\n}\nreturn arr;\n}\n\nhandleSubmit = (e) =>{\n   e.preventDefault();\n};\n\n\nrender(){\n  let {name,age,country,gender,passport,license,city,passport_number,techsKnown} = this.state.person;\n  const {countries,countryList,techs} = this.state;\n  const cities = country ? countryList.find((c1)=>c1.country === country).cities : [] ;\n  console.log(cities);\n  return(\n      <div className=\"container\">\n      <h1> Complete your Registration Process </h1>\n     \n      <div className=\"form-control\">\n          <label>Name</label>\n          <Field type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" placeholder=\"Enter your Name\" value={name} onChange={this.handleChange}/>\n      </div>\n\n      <div className=\"form-control\">\n          <label>Age</label>\n          <Field type=\"text\" className=\"form-control\" id=\"age\" name=\"age\" placeholder=\"Enter your Name\" value={age} onChange={this.handleChange}/>\n      </div>\n\n      <div className=\"form-control\">\n          <label>Country</label>\n          <select className=\"form-control\" name=\"country\" value={country} onChange={this.handleChange}>\n          <option disabled value = \"\">\n              Select Country\n          </option>\n          {countries.map((data)=>(\n              <option>{data}</option>\n          ))}\n          </select>\n      </div>\n\n      { country ? \n      <div className=\"form-control\">\n          <label>City</label>\n          <Field className=\"form-control\" name=\"city\" value={city} onChange={this.handleChange}/>\n          <option disabled value = \"\">\n              Select city\n          </option>\n          {cities.map((data)=>(\n              <option>{data}</option>\n          ))}\n      </div> : \"\"}\n\n      \n\n      <div className=\"form-check  form-check-inline\">\n          <Field className=\"form-check-input\" type=\"radio\" name=\"gender\" value=\"Male\" checked={gender === \"Male\"} onChange={this.handleChange}/>\n          <label className=\"form-check-label\">Male</label>\n      </div>\n\n      <div className=\"form-check  form-check-inline\">\n          <Field className=\"form-check-input\" type=\"radio\" name=\"gender\" value=\"Female\" checked={gender === \"Female\"} onChange={this.handleChange}/>\n          <label className=\"form-check-label\">Female</label>\n      </div>\n\n     <div className=\"form-check\">\n         <Field className=\"form-check-input\" type=\"checkbox\" value={passport} name=\"passport\" checked={passport} onChange={this.handleChange}/>\n         <label className=\"form-check-label\">Passport</label>\n   </div>\n\n   \n   <div className=\"form-check\">\n         <Field className=\"form-check-input\" type=\"checkbox\" value={license} name=\"license\" checked={license} onChange={this.handleChange}/>\n         <label className=\"form-check-label\">License</label>\n   </div>\n    {passport ? (\n        <div className=\"form-group\">\n            <label>Enter your Passport Number</label>\n            <Field type=\"text\" className=\"form-control\" id=\"passportNumber\" name=\"passport_number\" placeholder=\"Passport Number\" value={passport_number} onChange={this.handleChange}/>\n            </div>\n    ):(\"\")}\n    {techs.map(t1=> <div className=\"form-check\">\n         <Field className=\"form-check-input\" type=\"checkbox\" value={t1} name=\"techsKnown\" checked={techsKnown.findIndex(tech=>tech===t1)>=0} onChange={this.handleChange}/>\n         <label className=\"form-check-label\">{t1}</label>\n   </div>)}\n  <button className=\"btn btn-primary\" onClick={this.handleSubmit}>\n          Submit\n      </button>\n      </div>\n  )\n}\n\n}\n// Decorate the form component\nSimpleForm = reduxForm({\n  form: 'contact' // a unique name for this form\n})(SimpleForm);\n\nexport default SimpleForm;\n\n"]},"metadata":{},"sourceType":"module"}