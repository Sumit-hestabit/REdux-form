{"ast":null,"code":"var _jsxFileName = \"/var/www/redux-form/redux-form/src/SimpleForm.js\";\n// import React, { useEffect, useState } from 'react';\n// import { Field, reduxForm } from 'redux-form';\n// import axios from 'axios';\n// import Checkbox from './Checkbox';\n// // import { toppings } from './utils/topping';\n// // Form validation part :\n// const validate = values => {\n//   const errors = {}\n//   if (!values.firstName) {\n//     errors.firstName = 'Required First Name'\n//   } else if (values.firstName.length > 15) {\n//     errors.firstName = 'Must be 15 characters or less'\n//   }\n//   if (!values.lastName) {\n//     errors.lastName = 'Required Last Name'\n//   } else if (values.lastName.length > 15) {\n//     errors.lastName = 'Must be 15 characters or less'\n//   }\n//   if (!values.email) {\n//     errors.email = 'Required Email'\n//   } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n//     errors.email = 'Invalid email address'\n//   }\n//   if (!values.password) {\n//     errors.password = 'Required password';\n//   }\n//   if (!values.gender){\n//     errors.gender = 'Required to Choose any one';\n// }\n// if (!values.checked) {\n//   errors.checked = 'Please Select Any one.';\n// }\n//   return errors\n// }\n// // Component validation defined of Redux-form\n// const TextInput = ({ input, label,type, meta: { touched, error, warning }}) =>\n//   <div><label>{label}</label>\n//   <div>\n//   <input {...input} placeholder={label} type={type} />\n//   {touched &&((error && <span className=\"error\">{error} </span>) || (warning &&\n//   <span className=\"warning\">{warning}</span>))}\n//   </div>\n//   </div>\n// // Redux Form submitting \n// const Submit = async (values) => {\n//     let data = {\n//         user: {\n//             firstName: values.firstName,\n//             lastName: values.lastName,\n//             email: values.email,\n//             password: values.password,\n//             gender: values.gender,\n//             updatedCheckedState:values.updatedCheckedState,\n//         },\n//     }\n//   axios\n//       .post(`https://jsonplaceholder.typicode.com/users`, { data })\n//       .then(res => {\n//       console.log(\"response->>>>>>>\",res);\n//       console.log(\"response-data->>>>>>>\",res.data);\n//     });\n// }\n// const toppings = [\n//            {name:\"jeevan\"},\n//            {name:\"Manish\"},\n//            {name:\"Price\"},\n//            {name:\"saurabh\"}\n// ];\n// const SimpleForm = props => { \n//   const [checked,setChecked] = useState([]);\n//     // const [checkedState, setCheckedState] = useState(\n//     //   new Array(toppings.length).fill(false)\n//     // );\n//     // const handleOnChange = (position) => {\n//     //   const updatedCheckedState = checkedState.map((item, index) =>\n//     //     index === position ? !item : item\n//     //   );\n//     //   console.log(updatedCheckedState);\n//     //   setCheckedState(updatedCheckedState);\n//     // }\n//   const { handleSubmit, pristine, reset, submitting } = props\n//   // Return part of Jsx Element : \n// return (\n//     <form onSubmit={handleSubmit((values) => Submit(values))}>\n//     <div className=\"row\">\n//          <Field\n//             name=\"firstName\"\n//             type=\"text\"\n//             component={TextInput}\n//             label=\"First Name\"\n//          />\n//       </div>\n//       <div className=\"row\">\n//             <Field\n//               name=\"lastName\"\n//               type=\"text\"\n//               component={TextInput}\n//               label=\"Last Name\"\n//           />\n//       </div>\n//       <div className=\"row\">\n//       <Field\n//              name=\"email\"\n//              type=\"email\" \n//              component={TextInput} \n//              label=\"Email\"\n//          />\n//       </div>\n//       <div className=\"row\">\n//       <Field \n//              name=\"password\"\n//              type=\"password\" \n//              component={TextInput} \n//              label=\"Password\"\n//        />\n//       </div>\n//     <div className=\"row\">\n//       <label>Gender</label>\n//     <label>\n//     <Field \n//            name=\"gender\"\n//            component=\"input\"\n//            type=\"radio\" \n//            value=\"male\"\n//      /> Male\n//     </label>\n//     <label>\n//     <Field name=\"gender\"\n//             component=\"input\" \n//             type=\"radio\"\n//              value=\"female\"\n//      /> Female</label>\n//     </div>\n//     <div className=\"row\">\n//     <label>Favorite Color</label>\n//     <Field\n//         name=\"favoriteColor\"\n//         component=\"select\">\n//         <option value=\"color\">Select Favorite Color</option>\n//         <option value=\"ff0000\">Red</option>\n//         <option value=\"00ff00\">Green</option>\n//         <option value=\"0000ff\">Blue</option>\n//     </Field>\n//     </div>\n//     <div className=\"row\">\n//     <ul className=\"toppings-list\">\n//     {toppings.map(({ name }, index) => {\n//     return (\n//     <li key={index}>\n//     <Field\n//         type=\"checkbox\"\n//         id={`custom-checkbox-${index}`}\n//         name=\"checked\"\n//         value={name}\n//         component={TextInput}\n//         checked={setChecked[index]}\n//       />\n//     <label htmlFor={`custom-checkbox-${index}`}>{name}</label>\n//     </li>\n//     );\n//     })}\n// </ul>\n// </div>\n//     <button type=\"submit\" disabled={submitting}>Submit</button>\n//     <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values </button>\n//     </form>\n//   )\n// }\n// export default reduxForm({\n//       form: 'simple', \n//       validate, // form validation \n// })(SimpleForm)\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { renderField } from './renderField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RegisterPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        firstName: ''\n      },\n      submitted: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(values) {\n    this.setState({\n      submitted: true\n    });\n    const {\n      user\n    } = this.state;\n    const {\n      dispatch\n    } = this.props;\n    dispatch(userActions.register(user));\n  }\n\n  render() {\n    const {\n      registering\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6 col-md-offset-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"firstName\",\n            type: \"text\",\n            label: \"First Name\",\n            className: \"form-control\",\n            component: renderField\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            disabled: this.pristine,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this), registering && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"btn btn-link\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nRegisterPage = reduxForm({\n  form: 'register',\n  destroyOnUnmount: false\n})(RegisterPage);\nconst connectedRegisterPage = connect(mapStateToProps)(RegisterPage);\nexport { connectedRegisterPage as RegisterPage };","map":{"version":3,"sources":["/var/www/redux-form/redux-form/src/SimpleForm.js"],"names":["connect","Field","reduxForm","renderField","RegisterPage","React","Component","constructor","props","state","user","firstName","submitted","handleSubmit","bind","values","setState","dispatch","userActions","register","render","registering","pristine","form","destroyOnUnmount","connectedRegisterPage","mapStateToProps"],"mappingswB,aAAxB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAEA,MAAMC,YAAN,SAA2BC,KAAK,CAACC,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AACFC,QAAAA,SAAS,EAAE;AADT,OADG;AAITC,MAAAA,SAAS,EAAE;AAJF,KAAb;AAOA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAGDD,EAAAA,YAAY,CAAEE,MAAF,EAAU;AAClB,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,SAAS,EAAE;AAAb,KAAd;AACA,UAAM;AAAEF,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACA,UAAM;AAAEQ,MAAAA;AAAF,QAAe,KAAKT,KAA1B;AACAS,IAAAA,QAAQ,CAACC,WAAW,CAACC,QAAZ,CAAqBT,IAArB,CAAD,CAAR;AACH;;AAEDU,EAAAA,MAAM,GAAI;AACN,UAAM;AAAEC,MAAAA;AAAF,QAAkB,KAAKb,KAA7B;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,QAAQ,EAAE,KAAKK,YAArB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACI,QAAC,KAAD;AACI,YAAA,IAAI,EAAC,WADT;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,KAAK,EAAC,YAHV;AAII,YAAA,SAAS,EAAC,cAJd;AAKI,YAAA,SAAS,EAAEV;AALf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,iBAAhC;AAAkD,YAAA,QAAQ,EAAE,KAAKmB,QAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEMD,WAAW,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBAFrB,eAGI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,QAAT;AAAkB,YAAA,SAAS,EAAC,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqBH;;AA5CsC;;AA+C3CjB,YAAY,GAAGF,SAAS,CAAC;AACvBqB,EAAAA,IAAI,EAAE,UADiB;AAEvBC,EAAAA,gBAAgB,EAAE;AAFK,CAAD,CAAT,CAGZpB,YAHY,CAAf;AAKA,MAAMqB,qBAAqB,GAAGzB,OAAO,CAAC0B,eAAD,CAAP,CAAyBtB,YAAzB,CAA9B;AAEA,SAASqB,qBAAqB,IAAIrB,YAAlC","sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { Field, reduxForm } from 'redux-form';\n// import axios from 'axios';\n// import Checkbox from './Checkbox';\n// // import { toppings } from './utils/topping';\n\n// // Form validation part :\n\n// const validate = values => {\n//   const errors = {}\n//   if (!values.firstName) {\n//     errors.firstName = 'Required First Name'\n//   } else if (values.firstName.length > 15) {\n//     errors.firstName = 'Must be 15 characters or less'\n//   }\n//   if (!values.lastName) {\n//     errors.lastName = 'Required Last Name'\n//   } else if (values.lastName.length > 15) {\n//     errors.lastName = 'Must be 15 characters or less'\n//   }\n//   if (!values.email) {\n//     errors.email = 'Required Email'\n//   } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n//     errors.email = 'Invalid email address'\n//   }\n//   if (!values.password) {\n//     errors.password = 'Required password';\n//   }\n//   if (!values.gender){\n//     errors.gender = 'Required to Choose any one';\n// }\n// if (!values.checked) {\n//   errors.checked = 'Please Select Any one.';\n// }\n//   return errors\n// }\n\n\n// // Component validation defined of Redux-form\n\n// const TextInput = ({ input, label,type, meta: { touched, error, warning }}) =>\n//   <div><label>{label}</label>\n//   <div>\n//   <input {...input} placeholder={label} type={type} />\n//   {touched &&((error && <span className=\"error\">{error} </span>) || (warning &&\n//   <span className=\"warning\">{warning}</span>))}\n//   </div>\n//   </div>\n\n// // Redux Form submitting \n\n// const Submit = async (values) => {\n//     let data = {\n//         user: {\n//             firstName: values.firstName,\n//             lastName: values.lastName,\n//             email: values.email,\n//             password: values.password,\n//             gender: values.gender,\n//             updatedCheckedState:values.updatedCheckedState,\n//         },\n//     }\n\n//   axios\n//       .post(`https://jsonplaceholder.typicode.com/users`, { data })\n//       .then(res => {\n//       console.log(\"response->>>>>>>\",res);\n//       console.log(\"response-data->>>>>>>\",res.data);\n//     });\n// }\n\n// const toppings = [\n//            {name:\"jeevan\"},\n//            {name:\"Manish\"},\n//            {name:\"Price\"},\n//            {name:\"saurabh\"}\n// ];\n\n// const SimpleForm = props => { \n \n//   const [checked,setChecked] = useState([]);\n\n//     // const [checkedState, setCheckedState] = useState(\n//     //   new Array(toppings.length).fill(false)\n//     // );\n\n//     // const handleOnChange = (position) => {\n//     //   const updatedCheckedState = checkedState.map((item, index) =>\n//     //     index === position ? !item : item\n//     //   );\n//     //   console.log(updatedCheckedState);\n    \n//     //   setCheckedState(updatedCheckedState);\n//     // }\n\n    \n//   const { handleSubmit, pristine, reset, submitting } = props\n\n//   // Return part of Jsx Element : \n\n// return (\n//     <form onSubmit={handleSubmit((values) => Submit(values))}>\n    \n//     <div className=\"row\">\n//          <Field\n//             name=\"firstName\"\n//             type=\"text\"\n//             component={TextInput}\n//             label=\"First Name\"\n//          />\n//       </div>\n\n//       <div className=\"row\">\n//             <Field\n//               name=\"lastName\"\n//               type=\"text\"\n//               component={TextInput}\n//               label=\"Last Name\"\n//           />\n//       </div>\n\n//       <div className=\"row\">\n//       <Field\n//              name=\"email\"\n//              type=\"email\" \n//              component={TextInput} \n//              label=\"Email\"\n//          />\n//       </div>\n\n//       <div className=\"row\">\n//       <Field \n//              name=\"password\"\n//              type=\"password\" \n//              component={TextInput} \n//              label=\"Password\"\n//        />\n//       </div>\n\n\n//     <div className=\"row\">\n//       <label>Gender</label>\n//     <label>\n//     <Field \n//            name=\"gender\"\n//            component=\"input\"\n//            type=\"radio\" \n//            value=\"male\"\n//      /> Male\n//     </label>\n//     <label>\n//     <Field name=\"gender\"\n//             component=\"input\" \n//             type=\"radio\"\n//              value=\"female\"\n//      /> Female</label>\n//     </div>\n\n//     <div className=\"row\">\n//     <label>Favorite Color</label>\n//     <Field\n//         name=\"favoriteColor\"\n//         component=\"select\">\n//         <option value=\"color\">Select Favorite Color</option>\n//         <option value=\"ff0000\">Red</option>\n//         <option value=\"00ff00\">Green</option>\n//         <option value=\"0000ff\">Blue</option>\n//     </Field>\n//     </div>\n//     <div className=\"row\">\n//     <ul className=\"toppings-list\">\n//     {toppings.map(({ name }, index) => {\n//     return (\n//     <li key={index}>\n//     <Field\n//         type=\"checkbox\"\n//         id={`custom-checkbox-${index}`}\n//         name=\"checked\"\n//         value={name}\n//         component={TextInput}\n//         checked={setChecked[index]}\n//       />\n//     <label htmlFor={`custom-checkbox-${index}`}>{name}</label>\n//     </li>\n//     );\n//     })}\n// </ul>\n// </div>\n\n//     <button type=\"submit\" disabled={submitting}>Submit</button>\n//     <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values </button>\n//     </form>\n//   )\n// }\n\n// export default reduxForm({\n//       form: 'simple', \n//       validate, // form validation \n// })(SimpleForm)\n\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { renderField } from './renderField';\n\nclass RegisterPage extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            user: {\n                firstName: ''\n            },\n            submitted: false\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    handleSubmit (values) {\n        this.setState({ submitted: true });\n        const { user } = this.state;\n        const { dispatch } = this.props;\n        dispatch(userActions.register(user));\n    }\n\n    render () {\n        const { registering } = this.props;\n        return (\n            <div className=\"col-md-6 col-md-offset-3\">\n                <h2>Register</h2>\n                <form onSubmit={this.handleSubmit} >\n                    <div className=\"form-group\">\n                        <Field\n                            name=\"firstName\"\n                            type=\"text\"\n                            label=\"First Name\"\n                            className=\"form-control\"\n                            component={renderField}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" className=\"btn btn-primary\" disabled={this.pristine} >Register</button>\n                        { registering && <Loading /> }\n                        <Link to=\"/login\" className=\"btn btn-link\">Cancel</Link>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nRegisterPage = reduxForm({\n  form: 'register',\n  destroyOnUnmount: false\n})(RegisterPage);\n\nconst connectedRegisterPage = connect(mapStateToProps)(RegisterPage);\n\nexport { connectedRegisterPage as RegisterPage };"]},"metadata":{},"sourceType":"module"}