{"ast":null,"code":"var _jsxFileName = \"/var/www/redux-form/redux-form/src/CheckboxGroup.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CheckboxGroup extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleChange = e => {\n      const {\n        currentTarget: input\n      } = e;\n      let s1 = { ...this.state\n      };\n      input.type === \"checkbox\" ? input.name === \"techsKnown\" ? this.updatePart(input.checked, input.value, s1.person.techsKnown) : s1.person[input.name] = input.checked : s1.person[input.name] = input.value;\n      this.setState(s1);\n      console.log(\"data->>>>>\", s1);\n    };\n  }\n\n  checkboxGroup() {\n    let {\n      label,\n      required,\n      options,\n      input,\n      meta,\n      techsKnown\n    } = this.props;\n    return options.map((option, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: `${input.name}[${index}]`,\n            value: option.name,\n            checked: input.value.indexOf(option.name) !== -1,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this), option.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.checkboxGroup()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CheckboxGroup;","map":{"version":3,"sources":["/var/www/redux-form/redux-form/src/CheckboxGroup.js"],"names":["React","CheckboxGroup","Component","handleChange","e","currentTarget","input","s1","state","type","name","updatePart","checked","value","person","techsKnown","setState","console","log","checkboxGroup","label","required","options","meta","props","map","option","index","indexOf","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAAA;AAAA;;AAAA,SAExCC,YAFwC,GAExBC,CAAD,IAAM;AACjB,YAAM;AAACC,QAAAA,aAAa,EAACC;AAAf,UAAwBF,CAA9B;AACA,UAAIG,EAAE,GAAG,EAAC,GAAG,KAAKC;AAAT,OAAT;AACAF,MAAAA,KAAK,CAACG,IAAN,KAAe,UAAf,GACEH,KAAK,CAACI,IAAN,KAAe,YAAf,GAA8B,KAAKC,UAAL,CAAgBL,KAAK,CAACM,OAAtB,EAA8BN,KAAK,CAACO,KAApC,EAA0CN,EAAE,CAACO,MAAH,CAAUC,UAApD,CAA9B,GACCR,EAAE,CAACO,MAAH,CAAUR,KAAK,CAACI,IAAhB,IAAwBJ,KAAK,CAACM,OAFjC,GAGGL,EAAE,CAACO,MAAH,CAAUR,KAAK,CAACI,IAAhB,IAAwBJ,KAAK,CAACO,KAHjC;AAIA,WAAKG,QAAL,CAAcT,EAAd;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBX,EAAzB;AACF,KAXsC;AAAA;;AAaxCY,EAAAA,aAAa,GAAG;AACZ,QAAI;AAACC,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA,OAAlB;AAA2BhB,MAAAA,KAA3B;AAAkCiB,MAAAA,IAAlC;AAAuCR,MAAAA;AAAvC,QAAqD,KAAKS,KAA9D;AAEA,WAAOF,OAAO,CAACG,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAmB;AAClC,0BACA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI;AAAA,kCACI;AAAO,YAAA,IAAI,EAAC,UAAZ;AACO,YAAA,IAAI,EAAG,GAAErB,KAAK,CAACI,IAAK,IAAGiB,KAAM,GADpC;AAEO,YAAA,KAAK,EAAED,MAAM,CAAChB,IAFrB;AAGO,YAAA,OAAO,EAAEJ,KAAK,CAACO,KAAN,CAAYe,OAAZ,CAAoBF,MAAM,CAAChB,IAA3B,MAAqC,CAAC,CAHtD;AAIO,YAAA,QAAQ,EAAE,KAAKP;AAJtB;AAAA;AAAA;AAAA;AAAA,kBADJ,EAMKuB,MAAM,CAAChB,IANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAA+BiB,KAA/B;AAAA;AAAA;AAAA;AAAA,cADA;AAWH,KAZM,CAAP;AAaH;;AAEDE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,gBACK,KAAKV,aAAL;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AArCuC;;AAyC5C,eAAelB,aAAf","sourcesContent":["import React from 'react';\n\nclass CheckboxGroup extends React.Component {\n  \n    handleChange = (e) =>{\n        const {currentTarget:input} = e;\n        let s1 = {...this.state};\n        input.type === \"checkbox\" \n        ? input.name === \"techsKnown\" ? this.updatePart(input.checked,input.value,s1.person.techsKnown)\n        : (s1.person[input.name] = input.checked) :\n          (s1.person[input.name] = input.value);\n        this.setState(s1);\n        console.log(\"data->>>>>\",s1);\n     }\n     \n    checkboxGroup() {\n        let {label, required, options, input, meta,techsKnown} = this.props;\n\n        return options.map((option, index) => {\n            return (\n            <div className=\"checkbox\" key={index}>\n                <label>\n                    <input type=\"checkbox\"\n                           name={`${input.name}[${index}]`}\n                           value={option.name}\n                           checked={input.value.indexOf(option.name) !== -1}\n                           onChange={this.handleChange}/>\n                    {option.name}\n                </label>\n            </div>)\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                {this.checkboxGroup()}\n            </div>\n        )\n    }\n}\n\n\nexport default CheckboxGroup;"]},"metadata":{},"sourceType":"module"}