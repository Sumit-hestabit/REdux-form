{"ast":null,"code":"var _jsxFileName = \"/var/www/redux-form/redux-form/src/SimpleForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { fileObjToBase64, isEmpty, minMaxLenght, isChar, isEmail, isBlankSpace, minLenght, isNumber } from 'app/Utilities';\n\nconst validate = (values, props) => {\n  const errors = {};\n\n  if (isEmpty(values.firstName)) {\n    errors.firstName = 'Please enter your full name.';\n  } else if (minMaxLenght(values.firstName, 2, 25)) {\n    errors.firstName = 'Min 2 and max 20 characters are allowed.';\n  } else if (!isChar(values.firstName)) {\n    errors.firstName = 'Only alphabets values are allowed.';\n  }\n\n  if (isEmpty(values.lastName)) {\n    errors.lastName = 'Please enter your last name.';\n  } else if (minMaxLenght(values.lastName, 2, 25)) {\n    errors.lastName = 'Min 2 and max 20 characters are allowed.';\n  } else if (!isChar(values.lastName)) {\n    errors.lastName = 'Only alphabets values are allowed.';\n  }\n\n  if (isEmpty(values.email)) {\n    errors.email = 'Please enter your email.';\n  } else if (!isEmail(values.email) || isBlankSpace(values.email)) {\n    errors.email = \"Please enter valid email.\";\n  }\n\n  if (!values.termsContactConsent) {\n    errors.termsContactConsent = 'Please accept our consent checkbox.';\n  }\n\n  if (!values.terms) {\n    errors.terms = 'Please agree to terms and conditions.';\n  }\n\n  return errors;\n};\n\nconst SimpleForm = props => {\n  const {\n    handleSubmit,\n    pristine,\n    reset,\n    submitting\n  } = props;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"firstName\",\n    component: \"input\",\n    type: \"text\",\n    placeholder: \"First Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"lastName\",\n    component: \"input\",\n    type: \"text\",\n    placeholder: \"Last Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"email\",\n    component: \"input\",\n    type: \"email\",\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Sex\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"sex\",\n    component: \"input\",\n    type: \"radio\",\n    value: \"male\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), ' ', \"Male\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"sex\",\n    component: \"input\",\n    type: \"radio\",\n    value: \"female\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), ' ', \"Female\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Favorite Color\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"favoriteColor\",\n    component: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"ff0000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Red\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"00ff00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Green\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0000ff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Blue\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"employed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Employed\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"employed\",\n    id: \"employed\",\n    component: \"input\",\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"notes\",\n    component: \"textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: pristine || submitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    disabled: pristine || submitting,\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, \"Clear Values\")));\n};\n\n_c = SimpleForm;\nexport default reduxForm({\n  validate,\n  form: 'simple' // a unique identifier for this form\n\n})(SimpleForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleForm\");","map":{"version":3,"sources":["/var/www/redux-form/redux-form/src/SimpleForm.js"],"names":["React","Field","reduxForm","fileObjToBase64","isEmpty","minMaxLenght","isChar","isEmail","isBlankSpace","minLenght","isNumber","validate","values","props","errors","firstName","lastName","email","termsContactConsent","terms","SimpleForm","handleSubmit","pristine","reset","submitting","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { fileObjToBase64, isEmpty, minMaxLenght, isChar, isEmail, isBlankSpace, minLenght, isNumber } from 'app/Utilities'\n\n\nconst validate = (values, props) => {\n    const errors = {}\n\n    if (isEmpty(values.firstName)) {\n        errors.firstName = 'Please enter your full name.';\n    } else if (minMaxLenght(values.firstName, 2, 25)) {\n        errors.firstName = 'Min 2 and max 20 characters are allowed.';\n    } else if (!isChar(values.firstName)) {\n        errors.firstName = 'Only alphabets values are allowed.';\n    }\n\n    if (isEmpty(values.lastName)) {\n        errors.lastName = 'Please enter your last name.';\n    } else if (minMaxLenght(values.lastName, 2, 25)) {\n        errors.lastName = 'Min 2 and max 20 characters are allowed.';\n    } else if (!isChar(values.lastName)) {\n        errors.lastName = 'Only alphabets values are allowed.';\n    }\n\n    if (isEmpty(values.email)) {\n        errors.email = 'Please enter your email.';\n    } else if (!isEmail(values.email) || isBlankSpace(values.email)) {\n        errors.email = \"Please enter valid email.\"\n    }\n\t\tif (!values.termsContactConsent) {\n\t\t\terrors.termsContactConsent = 'Please accept our consent checkbox.';\n\t\t}\n\n    if (!values.terms) {\n        errors.terms = 'Please agree to terms and conditions.';\n    }\n\n    return errors;\n};\n\n\nconst SimpleForm = props => {\n  const { handleSubmit, pristine, reset, submitting } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label>First Name</label>\n        <div>\n          <Field\n            name=\"firstName\"\n            component=\"input\"\n            type=\"text\"\n            placeholder=\"First Name\"\n          />\n        </div>\n      </div>\n      <div>\n        <label>Last Name</label>\n        <div>\n          <Field\n            name=\"lastName\"\n            component=\"input\"\n            type=\"text\"\n            placeholder=\"Last Name\"\n          />\n        </div>\n      </div>\n      <div>\n        <label>Email</label>\n        <div>\n          <Field\n            name=\"email\"\n            component=\"input\"\n            type=\"email\"\n            placeholder=\"Email\"\n          />\n        </div>\n      </div>\n      <div>\n        <label>Sex</label>\n        <div>\n          <label>\n            <Field name=\"sex\" component=\"input\" type=\"radio\" value=\"male\" />\n            {' '}\n            Male\n          </label>\n          <label>\n            <Field name=\"sex\" component=\"input\" type=\"radio\" value=\"female\" />\n            {' '}\n            Female\n          </label>\n        </div>\n      </div>\n      <div>\n        <label>Favorite Color</label>\n        <div>\n          <Field name=\"favoriteColor\" component=\"select\">\n            <option />\n            <option value=\"ff0000\">Red</option>\n            <option value=\"00ff00\">Green</option>\n            <option value=\"0000ff\">Blue</option>\n          </Field>\n        </div>\n      </div>\n      <div>\n        <label htmlFor=\"employed\">Employed</label>\n        <div>\n          <Field\n            name=\"employed\"\n            id=\"employed\"\n            component=\"input\"\n            type=\"checkbox\"\n          />\n        </div>\n      </div>\n      <div>\n        <label>Notes</label>\n        <div>\n          <Field name=\"notes\" component=\"textarea\" />\n        </div>\n      </div>\n      <div>\n        <button type=\"submit\" disabled={pristine || submitting}>Submit</button>\n        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\n          Clear Values\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  validate,\n  form: 'simple', // a unique identifier for this form\n})(SimpleForm);\n"]},"metadata":{},"sourceType":"module"}