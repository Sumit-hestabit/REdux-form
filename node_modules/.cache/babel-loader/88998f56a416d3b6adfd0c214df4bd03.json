{"ast":null,"code":"var _jsxFileName = \"/var/www/redux-form/redux-form/src/CheckboxGroup.js\";\nimport React from 'react';\nimport { FormGroup, ControlLabel, HelpBlock, Label } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Error = _ref => {\n  let {\n    meta: {\n      touched,\n      error\n    }\n  } = _ref;\n  return touched && error ? /*#__PURE__*/_jsxDEV(HelpBlock, {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 69\n  }, this) : null;\n};\n\n_c = Error;\n\nconst CheckboxGroup = _ref2 => {\n  let {\n    label,\n    required,\n    name,\n    options,\n    input,\n    meta\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(FormGroup, {\n    controlId: name,\n    children: [/*#__PURE__*/_jsxDEV(ControlLabel, {\n      children: [label, \" \", required && /*#__PURE__*/_jsxDEV(Label, {\n        bsStyle: \"info\",\n        children: \"required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: `${name}[${index}]`,\n          value: option.name,\n          checked: input.value.indexOf(option.name) !== -1,\n          onChange: event => {\n            const newValue = [...input.value];\n\n            if (event.target.checked) {\n              newValue.push(option.name);\n            } else {\n              newValue.splice(newValue.indexOf(option.name), 1);\n            }\n\n            return input.onChange(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this), option.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Error, {\n      meta: meta\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = CheckboxGroup;\nexport default CheckboxGroup;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Error\");\n$RefreshReg$(_c2, \"CheckboxGroup\");","map":{"version":3,"sources":["/var/www/redux-form/redux-form/src/CheckboxGroup.js"],"names":["React","FormGroup","ControlLabel","HelpBlock","Label","Error","meta","touched","error","CheckboxGroup","label","required","name","options","input","map","option","index","value","indexOf","event","newValue","target","checked","push","splice","onChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,SAAlC,EAA6CC,KAA7C,QAA0D,iBAA1D;;;AAEA,MAAMC,KAAK,GAAG;AAAA,MAAC;AAAEC,IAAAA,IAAI,EAAG;AAACC,MAAAA,OAAD;AAAUC,MAAAA;AAAV;AAAT,GAAD;AAAA,SAAmCD,OAAO,IAAIC,KAAX,gBAAmB,QAAC,SAAD;AAAA,cAAYA;AAAZ;AAAA;AAAA;AAAA;AAAA,UAAnB,GAAoD,IAAvF;AAAA,CAAd;;KAAMH,K;;AAEN,MAAMI,aAAa,GAAG;AAAA,MAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,IAAnB;AAAyBC,IAAAA,OAAzB;AAAmCC,IAAAA,KAAnC;AAA0CR,IAAAA;AAA1C,GAAD;AAAA,sBACpB,QAAC,SAAD;AAAW,IAAA,SAAS,EAAEM,IAAtB;AAAA,4BACE,QAAC,YAAD;AAAA,iBAAeF,KAAf,OAAwBC,QAAQ,iBAAI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEME,OAAO,CAACE,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACZ;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,UAAZ;AACO,UAAA,IAAI,EAAG,GAAEL,IAAK,IAAGK,KAAM,GAD9B;AAEO,UAAA,KAAK,EAAED,MAAM,CAACJ,IAFrB;AAGO,UAAA,OAAO,EAAEE,KAAK,CAACI,KAAN,CAAYC,OAAZ,CAAoBH,MAAM,CAACJ,IAA3B,MAAqC,CAAC,CAHtD;AAIO,UAAA,QAAQ,EAAEQ,KAAK,IAAI;AACjB,kBAAMC,QAAQ,GAAG,CAAC,GAAGP,KAAK,CAACI,KAAV,CAAjB;;AACA,gBAAGE,KAAK,CAACE,MAAN,CAAaC,OAAhB,EAAyB;AACvBF,cAAAA,QAAQ,CAACG,IAAT,CAAcR,MAAM,CAACJ,IAArB;AACD,aAFD,MAEO;AACLS,cAAAA,QAAQ,CAACI,MAAT,CAAgBJ,QAAQ,CAACF,OAAT,CAAiBH,MAAM,CAACJ,IAAxB,CAAhB,EAA+C,CAA/C;AACD;;AAED,mBAAOE,KAAK,CAACY,QAAN,CAAeL,QAAf,CAAP;AACD;AAbR;AAAA;AAAA;AAAA;AAAA,gBADF,EAeGL,MAAM,CAACJ,IAfV;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,OAA+BK,KAA/B;AAAA;AAAA;AAAA;AAAA,YADA,CAFN,eAuBE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEX;AAAb;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADoB;AAAA,CAAtB;;MAAMG,a;AA4BN,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport { FormGroup, ControlLabel, HelpBlock, Label } from 'react-bootstrap';\n\nconst Error = ({ meta : {touched, error} }) =>  (touched && error ? <HelpBlock>{error}</HelpBlock> : null);\n\nconst CheckboxGroup = ({ label, required, name, options,  input, meta}) => (\n  <FormGroup controlId={name}>\n    <ControlLabel>{label} { required && <Label bsStyle=\"info\">required</Label> }</ControlLabel>\n      { options.map((option, index) => (\n        <div className=\"checkbox\" key={index}>\n          <label>\n            <input type=\"checkbox\"\n                   name={`${name}[${index}]`}\n                   value={option.name}\n                   checked={input.value.indexOf(option.name) !== -1}\n                   onChange={event => {\n                     const newValue = [...input.value];\n                     if(event.target.checked) {\n                       newValue.push(option.name);\n                     } else {\n                       newValue.splice(newValue.indexOf(option.name), 1);\n                     }\n\n                     return input.onChange(newValue);\n                   }}/>\n            {option.name}\n          </label>\n        </div>))\n      }\n    <Error meta={meta} />\n  </FormGroup>\n);\n\nexport default CheckboxGroup;"]},"metadata":{},"sourceType":"module"}