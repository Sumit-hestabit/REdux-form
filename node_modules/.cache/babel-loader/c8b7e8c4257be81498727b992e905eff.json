{"ast":null,"code":"var _jsxFileName = \"/var/www/redux-form/redux-form/src/RegisterPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport axios from 'axios';\nimport CheckboxGroup from './CheckboxGroup';\nimport RadioGroup from './RadioGroup'; // Form validation part :\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.firstName) {\n    errors.firstName = 'Required First Name';\n  } else if (values.firstName.length > 15) {\n    errors.firstName = 'Must be 15 characters or less';\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'Required Last Name';\n  } else if (values.lastName.length > 15) {\n    errors.lastName = 'Must be 15 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required Email';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = 'Required password';\n  }\n\n  if (!values.favoriteColor) {\n    errors.favoriteColor = 'Choose the best colors ';\n  }\n\n  if (!values.gender) {\n    errors.gender = 'Required to Choose any one';\n  }\n\n  if (!values.checked) {\n    errors.checked = 'Please Select Any one.';\n  }\n\n  return errors;\n};\n\nrenderSelectField = _ref => {\n  let {\n    input,\n    label,\n    type,\n    meta: {\n      touched,\n      error\n    },\n    children\n  } = _ref;\n  const className = `field ${touched && error ? 'error' : ''}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", { ...input,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 3\n      }, this), touched && error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui error message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n}; // Component validation defined of Redux-form\n\n\nconst TextInput = _ref2 => {\n  let {\n    input,\n    label,\n    type,\n    meta: {\n      touched,\n      error,\n      warning\n    }\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...input,\n        placeholder: label,\n        type: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 3\n      }, this), touched && (error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: [error, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this) || warning && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"warning\",\n        children: warning\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 3\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n}; // Redux Form submitting \n\n\n_c = TextInput;\n\nconst Submit = async values => {\n  let data = {\n    user: {\n      firstName: values.firstName,\n      lastName: values.lastName,\n      email: values.email,\n      password: values.password,\n      gender: values.gender,\n      checked: values.checked\n    }\n  };\n  axios.post(`https://jsonplaceholder.typicode.com/users`, {\n    data\n  }).then(res => {\n    console.log(\"response->>>>>>>\", res);\n    console.log(\"response-data->>>>>>>\", res.data);\n  });\n};\n\n_c2 = Submit;\n\nconst SimpleForm = props => {\n  const {\n    handleSubmit,\n    pristine,\n    reset,\n    submitting,\n    options\n  } = props; // Return part of Jsx Element : \n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(values => Submit(values)),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"firstName\",\n        type: \"text\",\n        component: TextInput,\n        label: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"lastName\",\n        type: \"text\",\n        component: TextInput,\n        label: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"email\",\n        type: \"email\",\n        component: TextInput,\n        label: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"password\",\n        type: \"password\",\n        component: TextInput,\n        label: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Field, {\n      component: RadioGroup,\n      name: \"gender\",\n      required: true,\n      options: [{\n        title: 'Male',\n        value: 'male'\n      }, {\n        title: 'Female',\n        value: 'female'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Favorite Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"favoriteColor\",\n        component: this.renderSelectField,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"color\",\n          children: \"Select Favorite Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ff0000\",\n          children: \"Red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"00ff00\",\n          children: \"Green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"0000ff\",\n          children: \"Blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"techsKnown\",\n        options: [{\n          name: 'Javascript',\n          id: 'one_day'\n        }, {\n          name: 'Angular',\n          id: 'two_day'\n        }, {\n          name: 'React js',\n          id: 'one_week'\n        }, {\n          name: 'vue js',\n          id: 'two_week'\n        }, {\n          name: 'PHP',\n          id: 'one_month'\n        }],\n        component: CheckboxGroup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-check-label\",\n        children: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: submitting,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      disabled: pristine || submitting,\n      onClick: reset,\n      children: \"Clear Values \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = SimpleForm;\nexport default reduxForm({\n  form: 'simple',\n  validate // form validation \n\n})(SimpleForm);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TextInput\");\n$RefreshReg$(_c2, \"Submit\");\n$RefreshReg$(_c3, \"SimpleForm\");","map":{"version":3,"sources":["/var/www/redux-form/redux-form/src/RegisterPage.js"],"names":["React","useEffect","useState","Field","reduxForm","axios","CheckboxGroup","RadioGroup","validate","values","errors","firstName","length","lastName","email","test","password","favoriteColor","gender","checked","renderSelectField","input","label","type","meta","touched","error","children","className","TextInput","warning","Submit","data","user","post","then","res","console","log","SimpleForm","props","handleSubmit","pristine","reset","submitting","options","title","value","name","id","form"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport axios from 'axios';\nimport CheckboxGroup from './CheckboxGroup';\nimport RadioGroup from './RadioGroup';\n\n// Form validation part :\n\nconst validate = values => {\n  const errors = {}\n  if (!values.firstName) {\n    errors.firstName = 'Required First Name'\n  } else if (values.firstName.length > 15) {\n    errors.firstName = 'Must be 15 characters or less'\n  }\n  if (!values.lastName) {\n    errors.lastName = 'Required Last Name'\n  } else if (values.lastName.length > 15) {\n    errors.lastName = 'Must be 15 characters or less'\n  }\n  if (!values.email) {\n    errors.email = 'Required Email'\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address'\n  }\n  if (!values.password) {\n    errors.password = 'Required password';\n  }\n  if (!values.favoriteColor) {\n    errors.favoriteColor = 'Choose the best colors ';\n  }\n  \n  if (!values.gender){\n    errors.gender = 'Required to Choose any one';\n}\nif (!values.checked) {\n  errors.checked = 'Please Select Any one.';\n}\n  return errors\n}\n\nrenderSelectField = ({ input, label, type, meta: {touched, error}, children }) => {\n  const className = `field ${touched && error ? 'error' : ''}`;\n  return (\n  \n      <div className={className}>\n<label>{label}</label>\n<div>\n  <select {...input}>\n    {children}\n  </select>\n  {touched && error && <div className=\"ui error message\">\n    <div className=\"header\">{error}</div>\n  </div>}\n</div>\n</div>\n  )\n} \n\n// Component validation defined of Redux-form\n\nconst TextInput = ({ input, label,type, meta: { touched, error, warning }}) =>\n  <div><label>{label}</label>\n  <div>\n  <input {...input} placeholder={label} type={type} />\n  {touched &&((error && <span className=\"error\">{error} </span>) || (warning &&\n  <span className=\"warning\">{warning}</span>))}\n  </div>\n  </div>\n\n// Redux Form submitting \n\nconst Submit = async (values) => {\n    let data = {\n        user: {\n            firstName: values.firstName,\n            lastName: values.lastName,\n            email: values.email,\n            password: values.password,\n            gender: values.gender,\n            checked:values.checked\n        },\n    }\n\n  axios\n      .post(`https://jsonplaceholder.typicode.com/users`, { data })\n      .then(res => {\n      console.log(\"response->>>>>>>\",res);\n      console.log(\"response-data->>>>>>>\",res.data);\n    });\n}\n\nconst SimpleForm = props => { \n     \n  const { handleSubmit, pristine, reset, submitting,options } = props\n\n  // Return part of Jsx Element : \n\nreturn (\n    <form onSubmit={handleSubmit((values) => Submit(values))}>\n    \n    <div className=\"row\">\n         <Field\n            name=\"firstName\"\n            type=\"text\"\n            component={TextInput}\n            label=\"First Name\"\n         />\n      </div>\n\n      <div className=\"row\">\n            <Field\n              name=\"lastName\"\n              type=\"text\"\n              component={TextInput}\n              label=\"Last Name\"\n          />\n      </div>\n\n      <div className=\"row\">\n      <Field\n             name=\"email\"\n             type=\"email\" \n             component={TextInput} \n             label=\"Email\"\n         />\n      </div>\n\n      <div className=\"row\">\n      <Field \n             name=\"password\"\n             type=\"password\" \n             component={TextInput} \n             label=\"Password\"\n       />\n      </div>\n\n\n      <Field\n      component={RadioGroup}\n       name=\"gender\" \n       required={true}\n       options={[\n        { title: 'Male', value: 'male' },\n        { title: 'Female', value: 'female' }\n      ]} />\n\n    <div className=\"row\">\n    <label>Favorite Color</label>\n    <Field\n        name=\"favoriteColor\"\n        component={this.renderSelectField}>\n        <option value=\"color\">Select Favorite Color</option>\n        <option value=\"ff0000\">Red</option>\n        <option value=\"00ff00\">Green</option>\n        <option value=\"0000ff\">Blue</option>\n    </Field>\n    </div>\n   \n    <div className=\"form-group\">\n                    <Field\n                       name=\"techsKnown\"\n                       options={[\n                           {\n                               name: 'Javascript',\n                               id: 'one_day'\n                           },\n                           {\n                               name: 'Angular',\n                               id: 'two_day'\n                           },\n                           {\n                               name: 'React js',\n                               id: 'one_week'\n                           },\n                           {\n                               name: 'vue js',\n                               id: 'two_week'\n                           },\n                           {\n                               name: 'PHP',\n                               id: 'one_month'\n                           },\n                       ]}\n                       component={CheckboxGroup}\n                   />\n                         <label className=\"form-check-label\">{options}</label>\n                    </div>\n\n                 <button type=\"submit\" disabled={submitting}>Submit</button>\n                <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values </button>\n                  </form>\n  )\n}\n\nexport default reduxForm({\n      form: 'simple', \n      validate, // form validation \n})(SimpleForm)"]},"metadata":{},"sourceType":"module"}