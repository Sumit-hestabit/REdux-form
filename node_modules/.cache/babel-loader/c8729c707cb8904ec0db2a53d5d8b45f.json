{"ast":null,"code":"var _jsxFileName = \"/var/www/redux-form/redux-form/src/RegisterPage.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { renderField } from './renderField';\nimport axios from 'axios';\nimport { userActions } from './action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RegisterPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      const {\n        currentTarget: input\n      } = e;\n      let s1 = { ...this.state\n      };\n      input.type === \"checkbox\" ? input.name === \"techsKnown\" ? this.updatePart(input.checked, input.value, s1.person.techsKnown) : s1.person[input.name] = input.checked : s1.person[input.name] = input.value;\n      this.setState(s1);\n      console.log(\"data->>>>>\", s1);\n    };\n\n    this.updatePart = (checked, value, arr) => {\n      if (checked) arr.push(value);else {\n        let index = arr.findIndex(ele => ele === value);\n        if (index >= 0) arr.splice(index, 1);\n      }\n      return arr;\n    };\n\n    this.state = {\n      person: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        gender: '',\n        techsKnown: []\n      },\n      techs: [\"React\", \"Javascript\", \"Jquery\", \"Angular\", \"vue\"]\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  //  handleSubmit = async (e) => {\n  //       e.preventDefault();\n  //     //  let s1 = {...this.state};\n  //     // console.log(s1.person);\n  //     const { person } = this.state;\n  //     const { dispatch } = this.props;\n  //     dispatch(userActions.simple(person));\n  // }\n  handleSubmit(person) {\n    console.log(\"handleSubmit state\", person);\n    this.setState({\n      submitted: true\n    });\n    const {\n      dispatch\n    } = this.props;\n    dispatch(userActions.simple(person));\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      pristine,\n      reset,\n      submitting,\n      registering\n    } = this.props;\n    let {\n      firstName,\n      lastName,\n      email,\n      gender,\n      password,\n      techsKnown\n    } = this.state.person;\n    const {\n      techs\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6 col-md-offset-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Student Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"firstName\",\n            type: \"text\",\n            value: \"firstName\",\n            label: \"First Name\",\n            className: \"form-control\",\n            component: renderField,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"lastName\",\n            type: \"text\",\n            value: \"lastName\",\n            label: \"Last Name\",\n            className: \"form-control\",\n            component: renderField,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"email\",\n            type: \"text\",\n            value: \"email\",\n            label: \"Email\",\n            className: \"form-control\",\n            component: renderField,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"password\",\n            type: \"password\",\n            value: \"password\",\n            label: \"Password\",\n            className: \"form-control\",\n            component: renderField,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"gender\",\n            type: \"radio\",\n            value: \"male\",\n            className: \"form-control\",\n            checked: gender === \"Male\",\n            component: renderField,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: \"Male\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"gender\",\n            type: \"radio\",\n            className: \"form-control\",\n            checked: gender === \"Female\",\n            component: renderField,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: \"Female\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), techs.map(t1 => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"techsKnown\",\n            type: \"checkbox\",\n            value: t1,\n            className: \"form-control\",\n            checked: techsKnown.findIndex(tech => tech === t1) >= 0,\n            component: renderField,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: t1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: submitting,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), \" \", registering && 'Please Wait', /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: pristine || submitting,\n          onClick: reset,\n          children: \"Clear Values \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.firstName) {\n    errors.firstName = 'Required First Name';\n  } else if (values.firstName.length > 15) {\n    errors.firstName = 'Must be 15 characters or less';\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'Required Last Name';\n  } else if (values.lastName.length > 15) {\n    errors.lastName = 'Must be 15 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required Email';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = 'Required password';\n  }\n\n  if (!values.gender) {\n    errors.gender = 'Required to Choose any one';\n  }\n\n  if (!values.techsKnown) {\n    errors.techsKnown = 'Please Select Any one.';\n  }\n\n  return errors;\n};\n\nfunction mapStateToProps(state) {\n  const {\n    registering\n  } = state.registration;\n  return {\n    registering\n  };\n}\n\nexport default reduxForm({\n  form: 'simple',\n  validate // form validation \n\n})(RegisterPage);\nconst connectedRegisterPage = connect(mapStateToProps)(RegisterPage);\nexport { connectedRegisterPage as RegisterPage };","map":{"version":3,"sources":["/var/www/redux-form/redux-form/src/RegisterPage.js"],"names":["React","Field","reduxForm","renderField","axios","userActions","RegisterPage","Component","constructor","props","handleChange","e","currentTarget","input","s1","state","type","name","updatePart","checked","value","person","techsKnown","setState","console","log","arr","push","index","findIndex","ele","splice","firstName","lastName","email","password","gender","techs","handleSubmit","bind","submitted","dispatch","simple","render","pristine","reset","submitting","registering","map","t1","tech","validate","values","errors","length","test","mapStateToProps","registration","form","connectedRegisterPage","connect"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Field, reduxForm } from 'redux-form';\nimport { renderField } from './renderField';\nimport axios from 'axios';\nimport { userActions } from './action';\n\nclass RegisterPage extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            person: {\n                firstName: '',\n                lastName: '',\n                email: '',\n                password: '',\n                gender:'',\n                techsKnown:[],\n            },\n            techs : [\"React\",\"Javascript\",\"Jquery\",\"Angular\",\"vue\"],\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange = (e) =>{\n        const {currentTarget:input} = e;\n        let s1 = {...this.state};\n        input.type === \"checkbox\" \n        ? input.name === \"techsKnown\" ? this.updatePart(input.checked,input.value,s1.person.techsKnown)\n        : (s1.person[input.name] = input.checked) :\n          (s1.person[input.name] = input.value);\n        this.setState(s1);\n        console.log(\"data->>>>>\",s1);\n     }\n\n     updatePart = (checked,value,arr) => {\n        if(checked) arr.push(value);\n        else{\n            let index = arr.findIndex(ele=>ele === value);\n            if(index>=0) arr.splice(index,1);\n        }\n        return arr;\n        };\n\n    //  handleSubmit = async (e) => {\n    //       e.preventDefault();\n    //     //  let s1 = {...this.state};\n    //     // console.log(s1.person);\n    //     const { person } = this.state;\n    //     const { dispatch } = this.props;\n    //     dispatch(userActions.simple(person));\n    // }\n\n    handleSubmit(person) {\n        console.log(\"handleSubmit state\", person);\n        this.setState({ submitted: true });\n        const { dispatch } = this.props;\n        dispatch(userActions.simple(person));\n      }\n\n\n    render () {\n        const { handleSubmit , pristine, reset, submitting,registering} = this.props;\n        let {firstName,lastName,email,gender,password,techsKnown} = this.state.person;\n        const {techs} = this.state;\n        return (\n            <div className=\"col-md-6 col-md-offset-3\">\n                <h2>Student Registration</h2>\n                <form onSubmit={this.handleSubmit}>\n                 <div className=\"form-group\">\n                        <Field\n                            name=\"firstName\"\n                            type=\"text\"\n                            value=\"firstName\"\n                            label=\"First Name\"\n                            className=\"form-control\"\n                            component={renderField}\n                            onChange={this.handleChange}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <Field\n                            name=\"lastName\"\n                            type=\"text\"\n                            value=\"lastName\"\n                            label=\"Last Name\"\n                            className=\"form-control\"\n                            component={renderField}\n                            onChange={this.handleChange}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <Field\n                            name=\"email\"\n                            type=\"text\"\n                            value=\"email\"\n                            label=\"Email\"\n                            className=\"form-control\"\n                            component={renderField}\n                            onChange={this.handleChange}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <Field\n                            name=\"password\"\n                            type=\"password\"\n                            value=\"password\"\n                            label=\"Password\"\n                            className=\"form-control\"\n                            component={renderField}\n                            onChange={this.handleChange}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <Field\n                            name=\"gender\"\n                            type=\"radio\"\n                            value=\"male\"\n                            className=\"form-control\"\n                            checked={gender === \"Male\"}\n                            component={renderField}\n                            onChange={this.handleChange}\n                        />\n                         <label className=\"form-check-label\">Male</label>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <Field\n                            name=\"gender\"\n                            type=\"radio\"\n                            className=\"form-control\"\n                            checked={gender === \"Female\"}\n                            component={renderField}\n                            onChange={this.handleChange}\n                        />\n                         <label className=\"form-check-label\">Female</label>\n                    </div>\n                    {\n                    techs.map(t1=>\n                    <div className=\"form-group\">\n                        <input\n                            name=\"techsKnown\"\n                            type=\"checkbox\"\n                            value={t1}\n                            className=\"form-control\"\n                            checked={techsKnown.findIndex(tech=>tech===t1)>=0}\n                            component={renderField}\n                            onChange={this.handleChange}\n                       />\n                         <label className=\"form-check-label\">{t1}</label>\n                    </div>)\n                    }\n                    <button type=\"submit\" disabled={submitting}>Submit</button> { registering && 'Please Wait' }\n                    <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values </button>    \n                </form>\n            </div>\n        );\n    }\n}\n\n      const validate = values => {\n      const errors = {}\n      if (!values.firstName) {\n        errors.firstName = 'Required First Name'\n      } else if (values.firstName.length > 15) {\n        errors.firstName = 'Must be 15 characters or less'\n      }\n      if (!values.lastName) {\n        errors.lastName = 'Required Last Name'\n      } else if (values.lastName.length > 15) {\n        errors.lastName = 'Must be 15 characters or less'\n      }\n      if (!values.email) {\n        errors.email = 'Required Email'\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address'\n      }\n      if (!values.password) {\n        errors.password = 'Required password';\n      }\n      if (!values.gender){\n        errors.gender = 'Required to Choose any one';\n    }\n    if (!values.techsKnown) {\n      errors.techsKnown = 'Please Select Any one.';\n    }\n      return errors\n    }\n\n\n    function mapStateToProps (state) {\n        const { registering } = state.registration;\n        return {\n            registering\n        };\n    }\n    \n\nexport default reduxForm({\n      form: 'simple', \n      validate, // form validation \n})(RegisterPage)\n\nconst connectedRegisterPage = connect(mapStateToProps)(RegisterPage);\n\nexport { connectedRegisterPage as RegisterPage };"]},"metadata":{},"sourceType":"module"}