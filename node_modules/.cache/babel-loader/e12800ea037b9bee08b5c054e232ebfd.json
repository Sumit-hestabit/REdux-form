{"ast":null,"code":"var _jsxFileName = \"/var/www/redux-form/redux-form/src/RegisterPage.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { renderField } from './renderField';\nimport axios from 'axios';\nimport CheckboxGroup from './CheckboxGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RegisterPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      const {\n        currentTarget: input\n      } = e;\n      let s1 = { ...this.state\n      };\n      s1.person[input.name] = input.value;\n      this.setState(s1);\n      console.log(\"data->>>>>\", s1);\n    };\n\n    this.handleChange = event => {\n      const {\n        currentTarget: input\n      } = event;\n      let newArray = [...this.state.techsKnown, event.target.id];\n\n      if (this.state.techsKnown.includes(event.target.id)) {\n        newArray = newArray.filter(day => day !== event.target.id);\n      }\n\n      this.setState({\n        techsKnown: newArray\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      let s1 = { ...this.state\n      };\n      console.log(\"data->>>>\", s1.person);\n    };\n\n    this.state = {\n      person: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        gender: '',\n        techsKnown: []\n      },\n      optionsList: [{\n        id: 1,\n        name: 'Javascript'\n      }, {\n        id: 2,\n        name: 'Angular'\n      }, {\n        id: 3,\n        name: 'Java'\n      }]\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      pristine,\n      reset,\n      submitting,\n      label,\n      required,\n      options,\n      input,\n      meta\n    } = this.props;\n    let {\n      firstName,\n      lastName,\n      email,\n      gender,\n      password,\n      techsKnown\n    } = this.state.person;\n    const {\n      optionsList\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6 col-md-offset-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Student Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"firstName\",\n            type: \"text\",\n            value: \"firstName\",\n            label: \"First Name\",\n            className: \"form-control\",\n            component: renderField,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"lastName\",\n            type: \"text\",\n            value: \"lastName\",\n            label: \"Last Name\",\n            className: \"form-control\",\n            component: renderField,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"email\",\n            type: \"text\",\n            value: \"email\",\n            label: \"Email\",\n            className: \"form-control\",\n            component: renderField,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"password\",\n            type: \"password\",\n            value: \"password\",\n            label: \"Password\",\n            className: \"form-control\",\n            component: renderField,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"gender\",\n            type: \"radio\",\n            value: \"male\",\n            className: \"form-control\",\n            checked: gender === \"Male\",\n            component: renderField,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: \"Male\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"gender\",\n            type: \"radio\",\n            className: \"form-control\",\n            checked: gender === \"Female\",\n            component: renderField,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: \"Female\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"techsKnown\",\n            id: \"techsKnown\",\n            component: CheckboxGroup,\n            options: optionsList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: submitting,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: pristine || submitting,\n          onClick: reset,\n          children: \"Clear Values \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.firstName) {\n    errors.firstName = 'Required First Name';\n  } else if (values.firstName.length > 15) {\n    errors.firstName = 'Must be 15 characters or less';\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'Required Last Name';\n  } else if (values.lastName.length > 15) {\n    errors.lastName = 'Must be 15 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required Email';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = 'Required password';\n  }\n\n  if (!values.gender) {\n    errors.gender = 'Required to Choose any one';\n  }\n\n  if (!values.techsKnown) {\n    errors.techsKnown = 'Please Select Any one.';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'simple',\n  validate // form validation \n\n})(RegisterPage);","map":{"version":3,"sources":["/var/www/redux-form/redux-form/src/RegisterPage.js"],"names":["React","Field","reduxForm","renderField","axios","CheckboxGroup","RegisterPage","Component","constructor","props","handleChange","e","currentTarget","input","s1","state","person","name","value","setState","console","log","event","newArray","techsKnown","target","id","includes","filter","day","handleSubmit","preventDefault","firstName","lastName","email","password","gender","optionsList","bind","render","pristine","reset","submitting","label","required","options","meta","validate","values","errors","length","test","form"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Field, reduxForm } from 'redux-form';\nimport { renderField } from './renderField';\nimport axios from 'axios';\nimport CheckboxGroup from './CheckboxGroup';\n\n\n\nclass RegisterPage extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            person: {\n                firstName: '',\n                lastName: '',\n                email: '',\n                password: '',\n                gender:'',\n                techsKnown:[],\n            },\n            optionsList : [{id: 1, name: 'Javascript'}, {id: 2, name: 'Angular'}, {id: 3, name: 'Java'}],\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n       }\n\n      handleChange = (e) =>{\n           const {currentTarget:input} = e;\n            let s1 = {...this.state};\n            (s1.person[input.name] = input.value);\n             this.setState(s1);\n             console.log(\"data->>>>>\",s1);\n        }\n        handleChange = (event) =>{\n            const {currentTarget:input} = event;\n            let newArray = [...this.state.techsKnown, event.target.id];\n            if (this.state.techsKnown.includes(event.target.id)) {\n              newArray = newArray.filter(day => day !== event.target.id);\n            }\n            this.setState({\n                techsKnown: newArray\n            });\n         }\n      \n        handleSubmit = async (e) => {\n               e.preventDefault();\n               let s1 = {...this.state};\n               console.log(\"data->>>>\",s1.person);\n      }\n\n    render () {\n        const { handleSubmit , pristine, reset, submitting,label, required, options, input, meta} = this.props;\n        let {firstName,lastName,email,gender,password,techsKnown} = this.state.person;\n        const {optionsList} = this.state;\n       \n        return (\n            <div className=\"col-md-6 col-md-offset-3\">\n                <h2>Student Registration</h2>\n                <form onSubmit={this.handleSubmit}>\n                 <div className=\"form-group\">\n                        <Field\n                            name=\"firstName\"\n                            type=\"text\"\n                            value=\"firstName\"\n                            label=\"First Name\"\n                            className=\"form-control\"\n                            component={renderField}\n                            onChange={this.handleChange}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <Field\n                            name=\"lastName\"\n                            type=\"text\"\n                            value=\"lastName\"\n                            label=\"Last Name\"\n                            className=\"form-control\"\n                            component={renderField}\n                            onChange={this.handleChange}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <Field\n                            name=\"email\"\n                            type=\"text\"\n                            value=\"email\"\n                            label=\"Email\"\n                            className=\"form-control\"\n                            component={renderField}\n                            onChange={this.handleChange}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <Field\n                            name=\"password\"\n                            type=\"password\"\n                            value=\"password\"\n                            label=\"Password\"\n                            className=\"form-control\"\n                            component={renderField}\n                            onChange={this.handleChange}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <Field\n                            name=\"gender\"\n                            type=\"radio\"\n                            value=\"male\"\n                            className=\"form-control\"\n                            checked={gender === \"Male\"}\n                            component={renderField}\n                            onChange={this.handleChange}\n                        />\n                         <label className=\"form-check-label\">Male</label>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <Field\n                            name=\"gender\"\n                            type=\"radio\"\n                            className=\"form-control\"\n                            checked={gender === \"Female\"}\n                            component={renderField}\n                            onChange={this.handleChange}\n                        />\n                         <label className=\"form-check-label\">Female</label>\n                    </div>\n                    \n                    <div className=\"form-group\">\n                     <Field\n                       name=\"techsKnown\"\n                       id=\"techsKnown\"\n                       component={CheckboxGroup}\n                       options={optionsList}\n                       />\n                         <label className=\"form-check-label\">{options}</label>\n                    </div>\n                    \n\n                    <button type=\"submit\" disabled={submitting}>Submit</button>\n                    <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values </button>    \n                </form>\n            </div>\n        );\n    }\n}\n\n      const validate = values => {\n      const errors = {}\n      if (!values.firstName) {\n        errors.firstName = 'Required First Name'\n      } else if (values.firstName.length > 15) {\n        errors.firstName = 'Must be 15 characters or less'\n      }\n      if (!values.lastName) {\n        errors.lastName = 'Required Last Name'\n      } else if (values.lastName.length > 15) {\n        errors.lastName = 'Must be 15 characters or less'\n      }\n      if (!values.email) {\n        errors.email = 'Required Email'\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address'\n      }\n      if (!values.password) {\n        errors.password = 'Required password';\n      }\n      if (!values.gender){\n        errors.gender = 'Required to Choose any one';\n    }\n    if (!values.techsKnown) {\n      errors.techsKnown = 'Please Select Any one.';\n    }\n      return errors\n    }\n\nexport default reduxForm({\n      form: 'simple', \n      validate, // form validation \n})(RegisterPage)\n"]},"metadata":{},"sourceType":"module"}