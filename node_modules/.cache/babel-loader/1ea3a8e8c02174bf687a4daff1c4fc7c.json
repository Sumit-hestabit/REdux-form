{"ast":null,"code":"var _jsxFileName = \"/var/www/redux-form/redux-form/src/SimpleForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport axios from 'axios'; // import { toppings } from './utils/topping';\n// Form validation part :\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.firstName) {\n    errors.firstName = 'Required First Name';\n  } else if (values.firstName.length > 15) {\n    errors.firstName = 'Must be 15 characters or less';\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'Required Last Name';\n  } else if (values.lastName.length > 15) {\n    errors.lastName = 'Must be 15 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required Email';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = 'Required password';\n  }\n\n  if (!values.gender) {\n    errors.gender = 'Required to Choose any one';\n  }\n\n  return errors;\n};\n\nconst userData = [{\n  name: \"jeevan\"\n}, {\n  name: \"Manish\"\n}, {\n  name: \"Price\"\n}, {\n  name: \"saurabh\"\n}]; // Component validation defined of Redux-form\n\nconst TextInput = _ref => {\n  let {\n    input,\n    label,\n    type,\n    meta: {\n      touched,\n      error,\n      warning\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...input,\n        placeholder: label,\n        type: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 3\n      }, this), touched && (error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: [error, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this) || warning && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"warning\",\n        children: warning\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 3\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n}; // Redux Form submitting \n\n\n_c = TextInput;\n\nconst Submit = async values => {\n  let data = {\n    user: {\n      firstName: values.firstName,\n      lastName: values.lastName,\n      email: values.email,\n      password: values.password,\n      gender: values.gender,\n      name: [values.name]\n    }\n  };\n  console.log(\"data->>>>>\", data);\n  axios.post(`https://jsonplaceholder.typicode.com/users`, {\n    data\n  }).then(res => {\n    console.log(\"response->>>>>>>\", res);\n    console.log(\"response-data->>>>>>>\", res.data);\n  });\n};\n\n_c2 = Submit;\n\nconst SimpleForm = props => {\n  _s();\n\n  const {\n    handleSubmit,\n    pristine,\n    reset,\n    submitting\n  } = props;\n  const [users, setUser] = useState([]);\n  useEffect(() => {\n    setUser(userData);\n    console.log(userData);\n  }, []); // Return part of Jsx Element : \n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(values => Submit(values)),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          name: \"firstName\",\n          type: \"text\",\n          component: TextInput,\n          label: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          name: \"lastName\",\n          type: \"text\",\n          component: TextInput,\n          label: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          type: \"email\",\n          component: TextInput,\n          label: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          type: \"password\",\n          component: TextInput,\n          label: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Gender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"gender\",\n            component: \"input\",\n            type: \"radio\",\n            value: \"male\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 5\n          }, this), \" Male\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"gender\",\n            component: \"input\",\n            type: \"radio\",\n            value: \"female\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 5\n          }, this), \" Female\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Favorite Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"favoriteColor\",\n          component: \"select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"color\",\n            children: \"Select Favorite Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ff0000\",\n            children: \"Red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"00ff00\",\n            children: \"Green\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0000ff\",\n            children: \"Blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"toppings-list\",\n          children: users.map((_ref2, index) => {\n            let {\n              name\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                type: \"checkbox\",\n                id: `custom-checkbox-${index}`,\n                name: name,\n                value: name,\n                component: TextInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `custom-checkbox-${index}`,\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 15\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 9\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: submitting,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      disabled: pristine || submitting,\n      onClick: reset,\n      children: \"Clear Values \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleForm, \"ykyTMNeztP4iYVxk0f134ONhaoE=\");\n\n_c3 = SimpleForm;\nexport default reduxForm({\n  form: 'simple',\n  validate // form validation \n\n})(SimpleForm);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TextInput\");\n$RefreshReg$(_c2, \"Submit\");\n$RefreshReg$(_c3, \"SimpleForm\");","map":{"version":3,"sources":["/var/www/redux-form/redux-form/src/SimpleForm.js"],"names":["React","useEffect","useState","Field","reduxForm","axios","validate","values","errors","firstName","length","lastName","email","test","password","gender","userData","name","TextInput","input","label","type","meta","touched","error","warning","Submit","data","user","console","log","post","then","res","SimpleForm","props","handleSubmit","pristine","reset","submitting","users","setUser","map","index","form"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport axios from 'axios';\n// import { toppings } from './utils/topping';\n\n// Form validation part :\n\nconst validate = values => {\n  const errors = {}\n  if (!values.firstName) {\n    errors.firstName = 'Required First Name'\n  } else if (values.firstName.length > 15) {\n    errors.firstName = 'Must be 15 characters or less'\n  }\n  if (!values.lastName) {\n    errors.lastName = 'Required Last Name'\n  } else if (values.lastName.length > 15) {\n    errors.lastName = 'Must be 15 characters or less'\n  }\n  if (!values.email) {\n    errors.email = 'Required Email'\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address'\n  }\n  if (!values.password) {\n    errors.password = 'Required password';\n  }\n  if (!values.gender){\n    errors.gender = 'Required to Choose any one';\n}\n  return errors\n}\n\nconst userData = [\n  {name:\"jeevan\"},\n  {name:\"Manish\"},\n  {name:\"Price\"},\n  {name:\"saurabh\"}\n];\n\n// Component validation defined of Redux-form\n\nconst TextInput = ({ input, label,type, meta: { touched, error, warning }}) =>\n  <div><label>{label}</label>\n  <div>\n  <input {...input} placeholder={label} type={type} />\n  {touched &&((error && <span className=\"error\">{error} </span>) || (warning &&\n  <span className=\"warning\">{warning}</span>))}\n  </div>\n  </div>\n\n// Redux Form submitting \n\nconst Submit = async (values) => {\n    let data = {\n        user: {\n            firstName: values.firstName,\n            lastName: values.lastName,\n            email: values.email,\n            password: values.password,\n            gender: values.gender,\n            name: [values.name],\n        },\n    }\n  console.log(\"data->>>>>\",data);\n  axios\n      .post(`https://jsonplaceholder.typicode.com/users`, { data })\n      .then(res => {\n      console.log(\"response->>>>>>>\",res);\n      console.log(\"response-data->>>>>>>\",res.data);\n    });\n}\n\n\n  const SimpleForm = props => {\n\n  const { handleSubmit, pristine, reset, submitting } = props\n\n  const [users,setUser] = useState([]);\n\n  useEffect(()=>{\n    setUser(userData);\n    console.log(userData);\n  },[]);\n\n  // Return part of Jsx Element : \n\nreturn (\n    <form onSubmit={handleSubmit((values) => Submit(values))}>\n    \n    <div className=\"col-md-6\">\n    <div className=\"row\">\n         <Field\n            name=\"firstName\"\n            type=\"text\"\n            component={TextInput}\n            label=\"First Name\"\n         />\n      </div>\n      </div>\n\n      <div className=\"col-md-6\">\n      <div className=\"row\">\n            <Field\n              name=\"lastName\"\n              type=\"text\"\n              component={TextInput}\n              label=\"Last Name\"\n          />\n      </div>\n      </div>\n\n      <div className=\"col-md-6\">\n      <div className=\"row\">\n      <Field\n             name=\"email\"\n             type=\"email\" \n             component={TextInput} \n             label=\"Email\"\n         />\n      </div>\n\n      <div className=\"row\">\n      <Field \n             name=\"password\"\n             type=\"password\" \n             component={TextInput} \n             label=\"Password\"\n       />\n      </div>\n     </div>\n\n\n     <div className=\"col-md-6\">\n    <div className=\"row\">\n      <label>Gender</label>\n    <label>\n    <Field \n           name=\"gender\"\n           component=\"input\"\n           type=\"radio\" \n           value=\"male\"\n     /> Male\n    </label>\n    <label>\n    <Field name=\"gender\"\n            component=\"input\" \n            type=\"radio\"\n             value=\"female\"\n     /> Female</label>\n    </div>\n    </div>\n\n    <div className=\"col-md-6\">\n    <div className=\"row\">\n    <label>Favorite Color</label>\n    <Field\n        name=\"favoriteColor\"\n        component=\"select\">\n        <option value=\"color\">Select Favorite Color</option>\n        <option value=\"ff0000\">Red</option>\n        <option value=\"00ff00\">Green</option>\n        <option value=\"0000ff\">Blue</option>\n    </Field>\n    </div>\n    </div>\n\n    <div className=\"col-md-6\">\n    <div className=\"row\">\n    <ul className=\"toppings-list\">\n        {users.map(({name} , index) => {\n          return (\n        <li key={index}>\n              <Field\n                type=\"checkbox\"\n                id={`custom-checkbox-${index}`}\n                name={name}\n                value={name}\n                component={TextInput}\n              />\n              <label htmlFor={`custom-checkbox-${index}`}>{name}</label>\n        </li>\n          );\n        })}\n      </ul>\n      </div>\n      </div>\n\n    <button type=\"submit\" disabled={submitting}>Submit</button>\n    <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values </button>\n    </form>\n  )\n}\n\nexport default reduxForm({\n      form: 'simple', \n      validate, // form validation \n})(SimpleForm)\n\n\n\n"]},"metadata":{},"sourceType":"module"}