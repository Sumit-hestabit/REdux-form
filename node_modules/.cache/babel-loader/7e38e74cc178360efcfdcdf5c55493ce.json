{"ast":null,"code":"var _jsxFileName = \"/var/www/redux-form/redux-form/src/SimpleForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport axios from 'axios'; // import { toppings } from './utils/topping';\n// Form validation part :\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.firstName) {\n    errors.firstName = 'Required First Name';\n  } else if (values.firstName.length > 15) {\n    errors.firstName = 'Must be 15 characters or less';\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'Required Last Name';\n  } else if (values.lastName.length > 15) {\n    errors.lastName = 'Must be 15 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required Email';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = 'Required password';\n  }\n\n  if (!values.gender) {\n    errors.gender = 'Required to Choose any one';\n  }\n\n  return errors;\n}; // Component validation defined of Redux-form\n\n\nconst TextInput = _ref => {\n  let {\n    input,\n    label,\n    type,\n    meta: {\n      touched,\n      error,\n      warning\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...input,\n        placeholder: label,\n        type: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 3\n      }, this), touched && (error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: [error, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this) || warning && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"warning\",\n        children: warning\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 3\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n}; // Redux Form submitting \n\n\n_c = TextInput;\n\nconst Submit = async values => {\n  let data = {\n    user: {\n      firstName: values.firstName,\n      lastName: values.lastName,\n      email: values.email,\n      password: values.password,\n      gender: values.gender,\n      name: values.name\n    }\n  };\n  console.log(\"data->>>>>\", data);\n  axios.post(`https://jsonplaceholder.typicode.com/users`, {\n    data\n  }).then(res => {\n    console.log(\"response->>>>>>>\", res);\n    console.log(\"response-data->>>>>>>\", res.data);\n  });\n};\n\n_c2 = Submit;\n\nconst SimpleForm = props => {\n  const toppings = [{\n    name: \"Developer\",\n    price: 1.2\n  }, {\n    name: \"Machine Learning\",\n    price: 2.0\n  }];\n  const {\n    handleSubmit,\n    pristine,\n    reset,\n    submitting\n  } = props; // Return part of Jsx Element : \n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(values => Submit(values)),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"firstName\",\n        type: \"text\",\n        component: TextInput,\n        label: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"lastName\",\n        type: \"text\",\n        component: TextInput,\n        label: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"email\",\n        type: \"email\",\n        component: TextInput,\n        label: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"password\",\n        type: \"password\",\n        component: TextInput,\n        label: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Gender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"gender\",\n          component: \"input\",\n          type: \"radio\",\n          value: \"male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 5\n        }, this), \" Male\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"gender\",\n          component: \"input\",\n          type: \"radio\",\n          value: \"female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 5\n        }, this), \" Female\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Favorite Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"favoriteColor\",\n        component: \"select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"color\",\n          children: \"Select Favorite Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ff0000\",\n          children: \"Red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"00ff00\",\n          children: \"Green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"0000ff\",\n          children: \"Blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"toppings-list\",\n        children: toppings.map((_ref2, index) => {\n          let {\n            name\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              type: \"checkbox\",\n              id: `custom-checkbox-${index}`,\n              name: name,\n              value: name,\n              component: TextInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `custom-checkbox-${index}`,\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 9\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: submitting,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      disabled: pristine || submitting,\n      onClick: reset,\n      children: \"Clear Values \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = SimpleForm;\nexport default reduxForm({\n  form: 'simple',\n  validate // form validation \n\n})(SimpleForm);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TextInput\");\n$RefreshReg$(_c2, \"Submit\");\n$RefreshReg$(_c3, \"SimpleForm\");","map":{"version":3,"sources":["/var/www/redux-form/redux-form/src/SimpleForm.js"],"names":["React","useEffect","useState","Field","reduxForm","axios","validate","values","errors","firstName","length","lastName","email","test","password","gender","TextInput","input","label","type","meta","touched","error","warning","Submit","data","user","name","console","log","post","then","res","SimpleForm","props","toppings","price","handleSubmit","pristine","reset","submitting","map","index","form"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport axios from 'axios';\n// import { toppings } from './utils/topping';\n\n// Form validation part :\n\nconst validate = values => {\n  const errors = {}\n  if (!values.firstName) {\n    errors.firstName = 'Required First Name'\n  } else if (values.firstName.length > 15) {\n    errors.firstName = 'Must be 15 characters or less'\n  }\n  if (!values.lastName) {\n    errors.lastName = 'Required Last Name'\n  } else if (values.lastName.length > 15) {\n    errors.lastName = 'Must be 15 characters or less'\n  }\n  if (!values.email) {\n    errors.email = 'Required Email'\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address'\n  }\n  if (!values.password) {\n    errors.password = 'Required password';\n  }\n  if (!values.gender){\n    errors.gender = 'Required to Choose any one';\n}\n  return errors\n}\n\n\n// Component validation defined of Redux-form\n\nconst TextInput = ({ input, label,type, meta: { touched, error, warning }}) =>\n  <div><label>{label}</label>\n  <div>\n  <input {...input} placeholder={label} type={type} />\n  {touched &&((error && <span className=\"error\">{error} </span>) || (warning &&\n  <span className=\"warning\">{warning}</span>))}\n  </div>\n  </div>\n\n// Redux Form submitting \n\nconst Submit = async (values) => {\n    let data = {\n        user: {\n            firstName: values.firstName,\n            lastName: values.lastName,\n            email: values.email,\n            password: values.password,\n            gender: values.gender,\n            name: values.name,\n        },\n    }\n  console.log(\"data->>>>>\",data);\n  axios\n      .post(`https://jsonplaceholder.typicode.com/users`, { data })\n      .then(res => {\n      console.log(\"response->>>>>>>\",res);\n      console.log(\"response-data->>>>>>>\",res.data);\n    });\n}\n\n\n  const SimpleForm = props => {\n\n   const toppings = [\n      {\n        name: \"Developer\",\n        price: 1.2\n      },\n      {\n        name: \"Machine Learning\",\n        price: 2.0\n      }\n      \n    ];\n    \n\n  const { handleSubmit, pristine, reset, submitting } = props\n\n  // Return part of Jsx Element : \n\nreturn (\n    <form onSubmit={handleSubmit((values) => Submit(values))}>\n    \n    <div className=\"row\">\n         <Field\n            name=\"firstName\"\n            type=\"text\"\n            component={TextInput}\n            label=\"First Name\"\n         />\n      </div>\n\n      <div className=\"row\">\n            <Field\n              name=\"lastName\"\n              type=\"text\"\n              component={TextInput}\n              label=\"Last Name\"\n          />\n      </div>\n\n      <div className=\"row\">\n      <Field\n             name=\"email\"\n             type=\"email\" \n             component={TextInput} \n             label=\"Email\"\n         />\n      </div>\n\n      <div className=\"row\">\n      <Field \n             name=\"password\"\n             type=\"password\" \n             component={TextInput} \n             label=\"Password\"\n       />\n      </div>\n\n\n    <div className=\"row\">\n      <label>Gender</label>\n    <label>\n    <Field \n           name=\"gender\"\n           component=\"input\"\n           type=\"radio\" \n           value=\"male\"\n     /> Male\n    </label>\n    <label>\n    <Field name=\"gender\"\n            component=\"input\" \n            type=\"radio\"\n             value=\"female\"\n     /> Female</label>\n    </div>\n\n    <div className=\"row\">\n    <label>Favorite Color</label>\n    <Field\n        name=\"favoriteColor\"\n        component=\"select\">\n        <option value=\"color\">Select Favorite Color</option>\n        <option value=\"ff0000\">Red</option>\n        <option value=\"00ff00\">Green</option>\n        <option value=\"0000ff\">Blue</option>\n    </Field>\n    </div>\n    <div className=\"row\">\n    <ul className=\"toppings-list\">\n        {toppings.map(({ name }, index) => {\n          return (\n        <li key={index}>\n              <Field\n                type=\"checkbox\"\n                id={`custom-checkbox-${index}`}\n                name={name}\n                value={name}\n                component={TextInput}\n              />\n              <label htmlFor={`custom-checkbox-${index}`}>{name}</label>\n        </li>\n          );\n        })}\n      </ul>\n      </div>\n\n    <button type=\"submit\" disabled={submitting}>Submit</button>\n    <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values </button>\n    </form>\n  )\n}\n\nexport default reduxForm({\n      form: 'simple', \n      validate, // form validation \n})(SimpleForm)\n"]},"metadata":{},"sourceType":"module"}