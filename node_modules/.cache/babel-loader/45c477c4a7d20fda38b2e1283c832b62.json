{"ast":null,"code":"var _jsxFileName = \"/var/www/redux-form/redux-form/src/SimpleForm.js\";\n// import React, { useEffect, useState } from 'react';\n// import { Field, reduxForm } from 'redux-form';\n// import axios from 'axios';\n// // import { toppings } from './utils/topping';\n// // Form validation part :\n// const validate = values => {\n//   const errors = {}\n//   if (!values.firstName) {\n//     errors.firstName = 'Required First Name'\n//   } else if (values.firstName.length > 15) {\n//     errors.firstName = 'Must be 15 characters or less'\n//   }\n//   if (!values.lastName) {\n//     errors.lastName = 'Required Last Name'\n//   } else if (values.lastName.length > 15) {\n//     errors.lastName = 'Must be 15 characters or less'\n//   }\n//   if (!values.email) {\n//     errors.email = 'Required Email'\n//   } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n//     errors.email = 'Invalid email address'\n//   }\n//   if (!values.password) {\n//     errors.password = 'Required password';\n//   }\n//   if (!values.gender){\n//     errors.gender = 'Required to Choose any one';\n// }\n//   return errors\n// }\n// const userData = [\n//   {name:\"jeevan\"},\n//   {name:\"Manish\"},\n//   {name:\"Price\"},\n//   {name:\"saurabh\"}\n// ];\n// // Component validation defined of Redux-form\n// const TextInput = ({ input, label,type, meta: { touched, error, warning }}) =>\n//   <div><label>{label}</label>\n//   <div>\n//   <input {...input} placeholder={label} type={type} />\n//   {touched &&((error && <span className=\"error\">{error} </span>) || (warning &&\n//   <span className=\"warning\">{warning}</span>))}\n//   </div>\n//   </div>\n// // Redux Form submitting \n// const Submit = async (values) => {\n//     let data = {\n//         user: {\n//             firstName: values.firstName,\n//             lastName: values.lastName,\n//             email: values.email,\n//             password: values.password,\n//             gender: values.gender,\n//             name: values.name,\n//         },\n//     }\n//   console.log(\"data->>>>>\",data);\n//   axios\n//       .post(`https://jsonplaceholder.typicode.com/users`, { data })\n//       .then(res => {\n//       console.log(\"response->>>>>>>\",res);\n//       console.log(\"response-data->>>>>>>\",res.data);\n//     });\n// }\n//   const SimpleForm = props => {\n//   const { handleSubmit, pristine, reset, submitting } = props\n//   const [users,setUser] = useState([]);\n//   useEffect(()=>{\n//     setUser(userData);\n//     console.log(userData);\n//   },[]);\n//   // Return part of Jsx Element : \n// return (\n//     <form onSubmit={handleSubmit((values) => Submit(values))}>\n//     <div className=\"col-md-6\">\n//     <div className=\"row\">\n//          <Field\n//             name=\"firstName\"\n//             type=\"text\"\n//             component={TextInput}\n//             label=\"First Name\"\n//          />\n//       </div>\n//       </div>\n//       <div className=\"col-md-6\">\n//       <div className=\"row\">\n//             <Field\n//               name=\"lastName\"\n//               type=\"text\"\n//               component={TextInput}\n//               label=\"Last Name\"\n//           />\n//       </div>\n//       </div>\n//       <div className=\"col-md-6\">\n//       <div className=\"row\">\n//       <Field\n//              name=\"email\"\n//              type=\"email\" \n//              component={TextInput} \n//              label=\"Email\"\n//          />\n//       </div>\n//       <div className=\"row\">\n//       <Field \n//              name=\"password\"\n//              type=\"password\" \n//              component={TextInput} \n//              label=\"Password\"\n//        />\n//       </div>\n//      </div>\n//      <div className=\"col-md-6\">\n//     <div className=\"row\">\n//       <label>Gender</label>\n//     <label>\n//     <Field \n//            name=\"gender\"\n//            component=\"input\"\n//            type=\"radio\" \n//            value=\"male\"\n//      /> Male\n//     </label>\n//     <label>\n//     <Field name=\"gender\"\n//             component=\"input\" \n//             type=\"radio\"\n//              value=\"female\"\n//      /> Female</label>\n//     </div>\n//     </div>\n//     <div className=\"col-md-6\">\n//     <div className=\"row\">\n//     <label>Favorite Color</label>\n//     <Field\n//         name=\"favoriteColor\"\n//         component=\"select\">\n//         <option value=\"color\">Select Favorite Color</option>\n//         <option value=\"ff0000\">Red</option>\n//         <option value=\"00ff00\">Green</option>\n//         <option value=\"0000ff\">Blue</option>\n//     </Field>\n//     </div>\n//     </div>\n//     <div className=\"col-md-6\">\n//     <div className=\"row\">\n//     <ul className=\"toppings-list\">\n//         {users.map(({name} , index) => {\n//           return (\n//         <li key={index}>\n//               <Field\n//                 type=\"checkbox\"\n//                 id={`custom-checkbox-${index}`}\n//                 name={name}\n//                 value={name}\n//                 component={TextInput}\n//               />\n//               <label htmlFor={`custom-checkbox-${index}`}>{name}</label>\n//         </li>\n//           );\n//         })}\n//       </ul>\n//       </div>\n//       </div>\n//     <button type=\"submit\" disabled={submitting}>Submit</button>\n//     <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values </button>\n//     </form>\n//   )\n// }\n// export default reduxForm({\n//       form: 'simple', \n//       validate, // form validation \n// })(SimpleForm)\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SimpleForm extends Component {\n  render() {\n    const {\n      handleSubmit\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstName\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"firstName\",\n          component: \"input\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"lastName\",\n          component: \"input\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          component: \"input\",\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this);\n  }\n\n} // Decorate the form component\n\n\nSimpleForm = reduxForm({\n  form: 'contact' // a unique name for this form\n\n})(SimpleForm);\nexport default SimpleForm;","map":{"version":3,"sources":["/var/www/redux-form/redux-form/src/SimpleForm.js"],"names":["React","Component","Field","reduxForm","SimpleForm","render","handleSubmit","props","form"],"mappingsgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AACjCI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAmB,KAAKC,KAA9B;AACA,wBACE;AAAM,MAAA,QAAQ,EAAED,YAAhB;AAAA,8BACE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,SAAS,EAAC,OAAlC;AAA0C,UAAA,IAAI,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,SAAS,EAAC,OAAjC;AAAyC,UAAA,IAAI,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eASE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,SAAS,EAAC,OAA9B;AAAsC,UAAA,IAAI,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAaE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AApBgC,C,CAuBnC;;;AACAF,UAAU,GAAGD,SAAS,CAAC;AACrBK,EAAAA,IAAI,EAAE,SADe,CACL;;AADK,CAAD,CAAT,CAEVJ,UAFU,CAAb;AAIA,eAAeA,UAAf","sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { Field, reduxForm } from 'redux-form';\n// import axios from 'axios';\n// // import { toppings } from './utils/topping';\n\n// // Form validation part :\n\n// const validate = values => {\n//   const errors = {}\n//   if (!values.firstName) {\n//     errors.firstName = 'Required First Name'\n//   } else if (values.firstName.length > 15) {\n//     errors.firstName = 'Must be 15 characters or less'\n//   }\n//   if (!values.lastName) {\n//     errors.lastName = 'Required Last Name'\n//   } else if (values.lastName.length > 15) {\n//     errors.lastName = 'Must be 15 characters or less'\n//   }\n//   if (!values.email) {\n//     errors.email = 'Required Email'\n//   } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n//     errors.email = 'Invalid email address'\n//   }\n//   if (!values.password) {\n//     errors.password = 'Required password';\n//   }\n//   if (!values.gender){\n//     errors.gender = 'Required to Choose any one';\n// }\n//   return errors\n// }\n\n// const userData = [\n//   {name:\"jeevan\"},\n//   {name:\"Manish\"},\n//   {name:\"Price\"},\n//   {name:\"saurabh\"}\n// ];\n\n// // Component validation defined of Redux-form\n\n// const TextInput = ({ input, label,type, meta: { touched, error, warning }}) =>\n//   <div><label>{label}</label>\n//   <div>\n//   <input {...input} placeholder={label} type={type} />\n//   {touched &&((error && <span className=\"error\">{error} </span>) || (warning &&\n//   <span className=\"warning\">{warning}</span>))}\n//   </div>\n//   </div>\n\n// // Redux Form submitting \n\n// const Submit = async (values) => {\n//     let data = {\n//         user: {\n//             firstName: values.firstName,\n//             lastName: values.lastName,\n//             email: values.email,\n//             password: values.password,\n//             gender: values.gender,\n//             name: values.name,\n//         },\n//     }\n//   console.log(\"data->>>>>\",data);\n//   axios\n//       .post(`https://jsonplaceholder.typicode.com/users`, { data })\n//       .then(res => {\n//       console.log(\"response->>>>>>>\",res);\n//       console.log(\"response-data->>>>>>>\",res.data);\n//     });\n// }\n\n\n//   const SimpleForm = props => {\n\n//   const { handleSubmit, pristine, reset, submitting } = props\n\n//   const [users,setUser] = useState([]);\n\n//   useEffect(()=>{\n//     setUser(userData);\n//     console.log(userData);\n//   },[]);\n\n//   // Return part of Jsx Element : \n\n// return (\n//     <form onSubmit={handleSubmit((values) => Submit(values))}>\n    \n//     <div className=\"col-md-6\">\n//     <div className=\"row\">\n//          <Field\n//             name=\"firstName\"\n//             type=\"text\"\n//             component={TextInput}\n//             label=\"First Name\"\n//          />\n//       </div>\n//       </div>\n\n//       <div className=\"col-md-6\">\n//       <div className=\"row\">\n//             <Field\n//               name=\"lastName\"\n//               type=\"text\"\n//               component={TextInput}\n//               label=\"Last Name\"\n//           />\n//       </div>\n//       </div>\n\n//       <div className=\"col-md-6\">\n//       <div className=\"row\">\n//       <Field\n//              name=\"email\"\n//              type=\"email\" \n//              component={TextInput} \n//              label=\"Email\"\n//          />\n//       </div>\n\n//       <div className=\"row\">\n//       <Field \n//              name=\"password\"\n//              type=\"password\" \n//              component={TextInput} \n//              label=\"Password\"\n//        />\n//       </div>\n//      </div>\n\n\n//      <div className=\"col-md-6\">\n//     <div className=\"row\">\n//       <label>Gender</label>\n//     <label>\n//     <Field \n//            name=\"gender\"\n//            component=\"input\"\n//            type=\"radio\" \n//            value=\"male\"\n//      /> Male\n//     </label>\n//     <label>\n//     <Field name=\"gender\"\n//             component=\"input\" \n//             type=\"radio\"\n//              value=\"female\"\n//      /> Female</label>\n//     </div>\n//     </div>\n\n//     <div className=\"col-md-6\">\n//     <div className=\"row\">\n//     <label>Favorite Color</label>\n//     <Field\n//         name=\"favoriteColor\"\n//         component=\"select\">\n//         <option value=\"color\">Select Favorite Color</option>\n//         <option value=\"ff0000\">Red</option>\n//         <option value=\"00ff00\">Green</option>\n//         <option value=\"0000ff\">Blue</option>\n//     </Field>\n//     </div>\n//     </div>\n\n//     <div className=\"col-md-6\">\n//     <div className=\"row\">\n//     <ul className=\"toppings-list\">\n//         {users.map(({name} , index) => {\n//           return (\n//         <li key={index}>\n//               <Field\n//                 type=\"checkbox\"\n//                 id={`custom-checkbox-${index}`}\n//                 name={name}\n//                 value={name}\n//                 component={TextInput}\n//               />\n//               <label htmlFor={`custom-checkbox-${index}`}>{name}</label>\n//         </li>\n//           );\n//         })}\n//       </ul>\n//       </div>\n//       </div>\n\n//     <button type=\"submit\" disabled={submitting}>Submit</button>\n//     <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values </button>\n//     </form>\n//   )\n// }\n\n// export default reduxForm({\n//       form: 'simple', \n//       validate, // form validation \n// })(SimpleForm)\n\n\n\n\n\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass SimpleForm extends Component {\n  render() {\n    const { handleSubmit } = this.props;\n    return (\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"firstName\">First Name</label>\n          <Field name=\"firstName\" component=\"input\" type=\"text\"/>\n        </div>\n        <div>\n          <label htmlFor=\"lastName\">Last Name</label>\n          <Field name=\"lastName\" component=\"input\" type=\"text\"/>\n        </div>\n        <div>\n          <label htmlFor=\"email\">Email</label>\n          <Field name=\"email\" component=\"input\" type=\"email\"/>\n        </div>\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n}\n\n// Decorate the form component\nSimpleForm = reduxForm({\n  form: 'contact' // a unique name for this form\n})(SimpleForm);\n\nexport default SimpleForm;\n\n"]},"metadata":{},"sourceType":"module"}